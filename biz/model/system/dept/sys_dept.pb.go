// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: sys_dept.proto

package dept

import (
	_ "github.com/feihua/hertz-admin/biz/model/system/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加部门表请求参数
type AddDeptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" form:"email" json:"email,omitempty"`                          //邮箱
	Status   int32  `protobuf:"varint,2,opt,name=status,proto3" form:"status" json:"status,omitempty"`                      //部门状态（0：停用，1:正常）
	ParentId int64  `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" form:"parentId" json:"parentId,omitempty"` //父部门id
	DeptName string `protobuf:"bytes,4,opt,name=dept_name,json=deptName,proto3" form:"deptName" json:"deptName,omitempty"`  //部门名称
	Sort     int32  `protobuf:"varint,5,opt,name=sort,proto3" form:"sort" json:"sort,omitempty"`                            //显示顺序
	Leader   string `protobuf:"bytes,6,opt,name=leader,proto3" form:"leader" json:"leader,omitempty"`                       //负责人
	Phone    string `protobuf:"bytes,7,opt,name=phone,proto3" form:"phone" json:"phone,omitempty"`                          //联系电话
}

func (x *AddDeptReq) Reset() {
	*x = AddDeptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dept_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDeptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeptReq) ProtoMessage() {}

func (x *AddDeptReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dept_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeptReq.ProtoReflect.Descriptor instead.
func (*AddDeptReq) Descriptor() ([]byte, []int) {
	return file_sys_dept_proto_rawDescGZIP(), []int{0}
}

func (x *AddDeptReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddDeptReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddDeptReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddDeptReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *AddDeptReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddDeptReq) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *AddDeptReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

// 删除部门表请求参数
type DeleteDeptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"`
}

func (x *DeleteDeptReq) Reset() {
	*x = DeleteDeptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dept_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeptReq) ProtoMessage() {}

func (x *DeleteDeptReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dept_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeptReq.ProtoReflect.Descriptor instead.
func (*DeleteDeptReq) Descriptor() ([]byte, []int) {
	return file_sys_dept_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteDeptReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 更新部门表请求参数
type UpdateDeptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"`                                  //部门id
	ParentId int64  `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" form:"parentId" json:"parentId,omitempty"` //父部门id
	DeptName string `protobuf:"bytes,4,opt,name=dept_name,json=deptName,proto3" form:"deptName" json:"deptName,omitempty"`  //部门名称
	Sort     int32  `protobuf:"varint,5,opt,name=sort,proto3" form:"sort" json:"sort,omitempty"`                            //显示顺序
	Leader   string `protobuf:"bytes,6,opt,name=leader,proto3" form:"leader" json:"leader,omitempty"`                       //负责人
	Phone    string `protobuf:"bytes,7,opt,name=phone,proto3" form:"phone" json:"phone,omitempty"`                          //联系电话
	Email    string `protobuf:"bytes,8,opt,name=email,proto3" form:"email" json:"email,omitempty"`                          //邮箱
	Status   int32  `protobuf:"varint,9,opt,name=status,proto3" form:"status" json:"status,omitempty"`                      //部门状态（0：停用，1:正常）
}

func (x *UpdateDeptReq) Reset() {
	*x = UpdateDeptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dept_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeptReq) ProtoMessage() {}

func (x *UpdateDeptReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dept_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeptReq.ProtoReflect.Descriptor instead.
func (*UpdateDeptReq) Descriptor() ([]byte, []int) {
	return file_sys_dept_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateDeptReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDeptReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UpdateDeptReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *UpdateDeptReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateDeptReq) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *UpdateDeptReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateDeptReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateDeptReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 更新部门表状态请求参数
type UpdateDeptStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" form:"ids" json:"ids,omitempty"`   //部门id
	Status int32   `protobuf:"varint,9,opt,name=status,proto3" form:"status" json:"status,omitempty"` //部门状态（0：停用，1:正常）
}

func (x *UpdateDeptStatusReq) Reset() {
	*x = UpdateDeptStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dept_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeptStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeptStatusReq) ProtoMessage() {}

func (x *UpdateDeptStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dept_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeptStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateDeptStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_dept_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDeptStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateDeptStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 查询部门表详情请求参数
type QueryDeptDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"` //部门id
}

func (x *QueryDeptDetailReq) Reset() {
	*x = QueryDeptDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dept_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeptDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeptDetailReq) ProtoMessage() {}

func (x *QueryDeptDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dept_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeptDetailReq.ProtoReflect.Descriptor instead.
func (*QueryDeptDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_dept_proto_rawDescGZIP(), []int{4}
}

func (x *QueryDeptDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryDeptDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                                     //部门id
	ParentId   int64  `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" form:"parent_id" json:"parent_id,omitempty" query:"parent_id"`           //父部门id
	Ancestors  string `protobuf:"bytes,3,opt,name=ancestors,proto3" form:"ancestors" json:"ancestors,omitempty" query:"ancestors"`                          //祖级列表
	DeptName   string `protobuf:"bytes,4,opt,name=dept_name,json=deptName,proto3" form:"dept_name" json:"dept_name,omitempty" query:"dept_name"`            //部门名称
	Sort       int32  `protobuf:"varint,5,opt,name=sort,proto3" form:"sort" json:"sort,omitempty" query:"sort"`                                             //显示顺序
	Leader     string `protobuf:"bytes,6,opt,name=leader,proto3" form:"leader" json:"leader,omitempty" query:"leader"`                                      //负责人
	Phone      string `protobuf:"bytes,7,opt,name=phone,proto3" form:"phone" json:"phone,omitempty" query:"phone"`                                          //联系电话
	Email      string `protobuf:"bytes,8,opt,name=email,proto3" form:"email" json:"email,omitempty" query:"email"`                                          //邮箱
	Status     int32  `protobuf:"varint,9,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                     //部门状态（0：停用，1:正常）
	CreateBy   string `protobuf:"bytes,11,opt,name=create_by,json=createBy,proto3" form:"create_by" json:"create_by,omitempty" query:"create_by"`           //创建者
	CreateTime string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"` //创建时间
	UpdateBy   string `protobuf:"bytes,13,opt,name=update_by,json=updateBy,proto3" form:"update_by" json:"update_by,omitempty" query:"update_by"`           //更新者
	UpdateTime string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"` //更新时间
}

func (x *QueryDeptDetailResp) Reset() {
	*x = QueryDeptDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dept_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeptDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeptDetailResp) ProtoMessage() {}

func (x *QueryDeptDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dept_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeptDetailResp.ProtoReflect.Descriptor instead.
func (*QueryDeptDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_dept_proto_rawDescGZIP(), []int{5}
}

func (x *QueryDeptDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryDeptDetailResp) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *QueryDeptDetailResp) GetAncestors() string {
	if x != nil {
		return x.Ancestors
	}
	return ""
}

func (x *QueryDeptDetailResp) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *QueryDeptDetailResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *QueryDeptDetailResp) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *QueryDeptDetailResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *QueryDeptDetailResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QueryDeptDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryDeptDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryDeptDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryDeptDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryDeptDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询部门表列表请求参数
type QueryDeptListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptName string `protobuf:"bytes,1,opt,name=dept_name,json=deptName,proto3" form:"deptName" json:"deptName,omitempty"`  //部门名称
	Status   int32  `protobuf:"varint,2,opt,name=status,proto3" form:"status" json:"status,omitempty"`                      //部门状态（0：停用，1:正常）
	PageNum  int32  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" form:"pageNo" json:"pageNo,omitempty"`       //第几页
	PageSize int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" form:"pageSize" json:"pageSize,omitempty"` //每页的数量
}

func (x *QueryDeptListReq) Reset() {
	*x = QueryDeptListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dept_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeptListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeptListReq) ProtoMessage() {}

func (x *QueryDeptListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dept_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeptListReq.ProtoReflect.Descriptor instead.
func (*QueryDeptListReq) Descriptor() ([]byte, []int) {
	return file_sys_dept_proto_rawDescGZIP(), []int{6}
}

func (x *QueryDeptListReq) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *QueryDeptListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryDeptListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryDeptListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryDeptListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                                     //部门id
	ParentId   int64  `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" form:"parent_id" json:"parent_id,omitempty" query:"parent_id"`           //父部门id
	Ancestors  string `protobuf:"bytes,3,opt,name=ancestors,proto3" form:"ancestors" json:"ancestors,omitempty" query:"ancestors"`                          //祖级列表
	DeptName   string `protobuf:"bytes,4,opt,name=dept_name,json=deptName,proto3" form:"dept_name" json:"dept_name,omitempty" query:"dept_name"`            //部门名称
	Sort       int32  `protobuf:"varint,5,opt,name=sort,proto3" form:"sort" json:"sort,omitempty" query:"sort"`                                             //显示顺序
	Leader     string `protobuf:"bytes,6,opt,name=leader,proto3" form:"leader" json:"leader,omitempty" query:"leader"`                                      //负责人
	Phone      string `protobuf:"bytes,7,opt,name=phone,proto3" form:"phone" json:"phone,omitempty" query:"phone"`                                          //联系电话
	Email      string `protobuf:"bytes,8,opt,name=email,proto3" form:"email" json:"email,omitempty" query:"email"`                                          //邮箱
	Status     int32  `protobuf:"varint,9,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                     //部门状态（0：停用，1:正常）
	DelFlag    int32  `protobuf:"varint,10,opt,name=del_flag,json=delFlag,proto3" form:"del_flag" json:"del_flag,omitempty" query:"del_flag"`               //删除标志（0代表删除 1代表存在）
	CreateBy   string `protobuf:"bytes,11,opt,name=create_by,json=createBy,proto3" form:"create_by" json:"create_by,omitempty" query:"create_by"`           //创建者
	CreateTime string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"` //创建时间
	UpdateBy   string `protobuf:"bytes,13,opt,name=update_by,json=updateBy,proto3" form:"update_by" json:"update_by,omitempty" query:"update_by"`           //更新者
	UpdateTime string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"` //更新时间
}

func (x *QueryDeptListResp) Reset() {
	*x = QueryDeptListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dept_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDeptListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDeptListResp) ProtoMessage() {}

func (x *QueryDeptListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dept_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDeptListResp.ProtoReflect.Descriptor instead.
func (*QueryDeptListResp) Descriptor() ([]byte, []int) {
	return file_sys_dept_proto_rawDescGZIP(), []int{7}
}

func (x *QueryDeptListResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryDeptListResp) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *QueryDeptListResp) GetAncestors() string {
	if x != nil {
		return x.Ancestors
	}
	return ""
}

func (x *QueryDeptListResp) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *QueryDeptListResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *QueryDeptListResp) GetLeader() string {
	if x != nil {
		return x.Leader
	}
	return ""
}

func (x *QueryDeptListResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *QueryDeptListResp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QueryDeptListResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryDeptListResp) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *QueryDeptListResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryDeptListResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryDeptListResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryDeptListResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type DeptEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeptEmpty) Reset() {
	*x = DeptEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dept_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeptEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptEmpty) ProtoMessage() {}

func (x *DeptEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dept_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptEmpty.ProtoReflect.Descriptor instead.
func (*DeptEmpty) Descriptor() ([]byte, []int) {
	return file_sys_dept_proto_rawDescGZIP(), []int{8}
}

var File_sys_dept_proto protoreflect.FileDescriptor

var file_sys_dept_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x79, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x02, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x44, 0x65, 0x70, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xca, 0xbb, 0x18,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18,
	0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xca, 0xbb, 0x18, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xca,
	0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa5, 0x02, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xca, 0xbb, 0x18,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca,
	0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x54, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x69, 0x64, 0x73, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe9, 0x02, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xb3, 0x01, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x64,
	0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0c, 0xca, 0xbb, 0x18, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x82, 0x03, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x0b, 0x0a, 0x09,
	0x44, 0x65, 0x70, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xd6, 0x04, 0x0a, 0x0b, 0x44, 0x65,
	0x70, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x44, 0x65, 0x70, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x64,
	0x64, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0xd2, 0xc1, 0x18,
	0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x65, 0x70,
	0x74, 0x2f, 0x61, 0x64, 0x64, 0x44, 0x65, 0x70, 0x74, 0x12, 0x57, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x1f, 0xd2, 0xc1, 0x18, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x64, 0x65, 0x70, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x74, 0x12, 0x57, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74,
	0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x44, 0x65, 0x70, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0xd2, 0xc1, 0x18, 0x1b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x65, 0x70, 0x74,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x12, 0x69, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x25, 0xd2, 0xc1, 0x18, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x64, 0x65, 0x70, 0x74, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x70, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x24, 0xd2, 0xc1, 0x18, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x64, 0x65, 0x70, 0x74, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65,
	0x70, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x68, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x22,
	0xd2, 0xc1, 0x18, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f,
	0x64, 0x65, 0x70, 0x74, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x65, 0x69, 0x68, 0x75, 0x61, 0x2f, 0x68, 0x65, 0x72, 0x74, 0x7a, 0x2d, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x65, 0x70, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_sys_dept_proto_rawDescOnce sync.Once
	file_sys_dept_proto_rawDescData = file_sys_dept_proto_rawDesc
)

func file_sys_dept_proto_rawDescGZIP() []byte {
	file_sys_dept_proto_rawDescOnce.Do(func() {
		file_sys_dept_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_dept_proto_rawDescData)
	})
	return file_sys_dept_proto_rawDescData
}

var file_sys_dept_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_sys_dept_proto_goTypes = []interface{}{
	(*AddDeptReq)(nil),          // 0: system.AddDeptReq
	(*DeleteDeptReq)(nil),       // 1: system.DeleteDeptReq
	(*UpdateDeptReq)(nil),       // 2: system.UpdateDeptReq
	(*UpdateDeptStatusReq)(nil), // 3: system.UpdateDeptStatusReq
	(*QueryDeptDetailReq)(nil),  // 4: system.QueryDeptDetailReq
	(*QueryDeptDetailResp)(nil), // 5: system.QueryDeptDetailResp
	(*QueryDeptListReq)(nil),    // 6: system.QueryDeptListReq
	(*QueryDeptListResp)(nil),   // 7: system.QueryDeptListResp
	(*DeptEmpty)(nil),           // 8: system.DeptEmpty
}
var file_sys_dept_proto_depIdxs = []int32{
	0, // 0: system.DeptHandler.AddDept:input_type -> system.AddDeptReq
	1, // 1: system.DeptHandler.DeleteDept:input_type -> system.DeleteDeptReq
	2, // 2: system.DeptHandler.UpdateDept:input_type -> system.UpdateDeptReq
	3, // 3: system.DeptHandler.UpdateDeptStatus:input_type -> system.UpdateDeptStatusReq
	4, // 4: system.DeptHandler.QueryDeptDetail:input_type -> system.QueryDeptDetailReq
	6, // 5: system.DeptHandler.QueryDeptList:input_type -> system.QueryDeptListReq
	8, // 6: system.DeptHandler.AddDept:output_type -> system.DeptEmpty
	8, // 7: system.DeptHandler.DeleteDept:output_type -> system.DeptEmpty
	8, // 8: system.DeptHandler.UpdateDept:output_type -> system.DeptEmpty
	8, // 9: system.DeptHandler.UpdateDeptStatus:output_type -> system.DeptEmpty
	5, // 10: system.DeptHandler.QueryDeptDetail:output_type -> system.QueryDeptDetailResp
	7, // 11: system.DeptHandler.QueryDeptList:output_type -> system.QueryDeptListResp
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sys_dept_proto_init() }
func file_sys_dept_proto_init() {
	if File_sys_dept_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_dept_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDeptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dept_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dept_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dept_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeptStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dept_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDeptDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dept_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDeptDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dept_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDeptListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dept_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDeptListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dept_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeptEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_dept_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sys_dept_proto_goTypes,
		DependencyIndexes: file_sys_dept_proto_depIdxs,
		MessageInfos:      file_sys_dept_proto_msgTypes,
	}.Build()
	File_sys_dept_proto = out.File
	file_sys_dept_proto_rawDesc = nil
	file_sys_dept_proto_goTypes = nil
	file_sys_dept_proto_depIdxs = nil
}
