// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: sys_dict_data.proto

package dictdata

import (
	api "github.com/feihua/hertz-admin/biz/model/system/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加字典数据表请求参数
type AddDictDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark    string `protobuf:"bytes,1,opt,name=remark,proto3" form:"remark" json:"remark,omitempty"`                          //备注
	DictSort  int32  `protobuf:"varint,2,opt,name=dict_sort,json=dictSort,proto3" form:"dictSort" json:"dictSort,omitempty"`    //字典排序
	DictLabel string `protobuf:"bytes,3,opt,name=dict_label,json=dictLabel,proto3" form:"dictLabel" json:"dictLabel,omitempty"` //字典标签
	DictValue string `protobuf:"bytes,4,opt,name=dict_value,json=dictValue,proto3" form:"dictValue" json:"dictValue,omitempty"` //字典键值
	DictType  string `protobuf:"bytes,5,opt,name=dict_type,json=dictType,proto3" form:"dictType" json:"dictType,omitempty"`     //字典类型
	CssClass  string `protobuf:"bytes,6,opt,name=css_class,json=cssClass,proto3" form:"cssClass" json:"cssClass,omitempty"`     //样式属性（其他样式扩展）
	ListClass string `protobuf:"bytes,7,opt,name=list_class,json=listClass,proto3" form:"listClass" json:"listClass,omitempty"` //表格回显样式
	IsDefault string `protobuf:"bytes,8,opt,name=is_default,json=isDefault,proto3" form:"isDefault" json:"isDefault,omitempty"` //是否默认（Y是 N否）
	Status    int32  `protobuf:"varint,9,opt,name=status,proto3" form:"status" json:"status,omitempty"`                         //状态（0：停用，1:正常）
}

func (x *AddDictDataReq) Reset() {
	*x = AddDictDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictDataReq) ProtoMessage() {}

func (x *AddDictDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictDataReq.ProtoReflect.Descriptor instead.
func (*AddDictDataReq) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{0}
}

func (x *AddDictDataReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddDictDataReq) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *AddDictDataReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *AddDictDataReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *AddDictDataReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *AddDictDataReq) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *AddDictDataReq) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *AddDictDataReq) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *AddDictDataReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AddDictDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *AddDictDataResp) Reset() {
	*x = AddDictDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDictDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDictDataResp) ProtoMessage() {}

func (x *AddDictDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDictDataResp.ProtoReflect.Descriptor instead.
func (*AddDictDataResp) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{1}
}

func (x *AddDictDataResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddDictDataResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 删除字典数据表请求参数
type DeleteDictDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" form:"ids" json:"ids,omitempty"`
}

func (x *DeleteDictDataReq) Reset() {
	*x = DeleteDictDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictDataReq) ProtoMessage() {}

func (x *DeleteDictDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictDataReq.ProtoReflect.Descriptor instead.
func (*DeleteDictDataReq) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteDictDataReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteDictDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *DeleteDictDataResp) Reset() {
	*x = DeleteDictDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDictDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDictDataResp) ProtoMessage() {}

func (x *DeleteDictDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDictDataResp.ProtoReflect.Descriptor instead.
func (*DeleteDictDataResp) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteDictDataResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteDictDataResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 更新字典数据表请求参数
type UpdateDictDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"`                                     //字典编码
	DictSort  int32  `protobuf:"varint,2,opt,name=dict_sort,json=dictSort,proto3" form:"dictSort" json:"dictSort,omitempty"`    //字典排序
	DictLabel string `protobuf:"bytes,3,opt,name=dict_label,json=dictLabel,proto3" form:"dictLabel" json:"dictLabel,omitempty"` //字典标签
	DictValue string `protobuf:"bytes,4,opt,name=dict_value,json=dictValue,proto3" form:"dictValue" json:"dictValue,omitempty"` //字典键值
	DictType  string `protobuf:"bytes,5,opt,name=dict_type,json=dictType,proto3" form:"dictType" json:"dictType,omitempty"`     //字典类型
	CssClass  string `protobuf:"bytes,6,opt,name=css_class,json=cssClass,proto3" form:"cssClass" json:"cssClass,omitempty"`     //样式属性（其他样式扩展）
	ListClass string `protobuf:"bytes,7,opt,name=list_class,json=listClass,proto3" form:"listClass" json:"listClass,omitempty"` //表格回显样式
	IsDefault string `protobuf:"bytes,8,opt,name=is_default,json=isDefault,proto3" form:"isDefault" json:"isDefault,omitempty"` //是否默认（Y是 N否）
	Status    int32  `protobuf:"varint,9,opt,name=status,proto3" form:"status" json:"status,omitempty"`                         //状态（0：停用，1:正常）
	Remark    string `protobuf:"bytes,10,opt,name=remark,proto3" form:"remark" json:"remark,omitempty"`                         //备注
}

func (x *UpdateDictDataReq) Reset() {
	*x = UpdateDictDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictDataReq) ProtoMessage() {}

func (x *UpdateDictDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictDataReq.ProtoReflect.Descriptor instead.
func (*UpdateDictDataReq) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDictDataReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDictDataReq) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *UpdateDictDataReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *UpdateDictDataReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *UpdateDictDataReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *UpdateDictDataReq) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *UpdateDictDataReq) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *UpdateDictDataReq) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *UpdateDictDataReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateDictDataReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateDictDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *UpdateDictDataResp) Reset() {
	*x = UpdateDictDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictDataResp) ProtoMessage() {}

func (x *UpdateDictDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictDataResp.ProtoReflect.Descriptor instead.
func (*UpdateDictDataResp) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDictDataResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateDictDataResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 更新字典数据表状态请求参数
type UpdateDictDataStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []int64 `protobuf:"varint,1,rep,packed,name=id,proto3" form:"id" json:"id,omitempty"`      //字典编码
	Status int32   `protobuf:"varint,9,opt,name=status,proto3" form:"status" json:"status,omitempty"` //状态（0：停用，1:正常）
}

func (x *UpdateDictDataStatusReq) Reset() {
	*x = UpdateDictDataStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictDataStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictDataStatusReq) ProtoMessage() {}

func (x *UpdateDictDataStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictDataStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateDictDataStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDictDataStatusReq) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateDictDataStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateDictDataStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *UpdateDictDataStatusResp) Reset() {
	*x = UpdateDictDataStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDictDataStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDictDataStatusResp) ProtoMessage() {}

func (x *UpdateDictDataStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDictDataStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateDictDataStatusResp) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDictDataStatusResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateDictDataStatusResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 查询字典数据表详情请求参数
type QueryDictDataDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"` //字典编码
}

func (x *QueryDictDataDetailReq) Reset() {
	*x = QueryDictDataDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictDataDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictDataDetailReq) ProtoMessage() {}

func (x *QueryDictDataDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictDataDetailReq.ProtoReflect.Descriptor instead.
func (*QueryDictDataDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{8}
}

func (x *QueryDictDataDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryDictDataDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg   string                   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code  api.Code                 `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
	Total int64                    `protobuf:"varint,3,opt,name=Total,proto3" form:"Total" json:"Total,omitempty" query:"Total"`
	Data  *QueryDictDataDetailData `protobuf:"bytes,4,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *QueryDictDataDetailResp) Reset() {
	*x = QueryDictDataDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictDataDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictDataDetailResp) ProtoMessage() {}

func (x *QueryDictDataDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictDataDetailResp.ProtoReflect.Descriptor instead.
func (*QueryDictDataDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{9}
}

func (x *QueryDictDataDetailResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryDictDataDetailResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

func (x *QueryDictDataDetailResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryDictDataDetailResp) GetData() *QueryDictDataDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryDictDataDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                                     //字典编码
	DictSort   int32  `protobuf:"varint,2,opt,name=dict_sort,json=dictSort,proto3" form:"dict_sort" json:"dict_sort,omitempty" query:"dict_sort"`           //字典排序
	DictLabel  string `protobuf:"bytes,3,opt,name=dict_label,json=dictLabel,proto3" form:"dict_label" json:"dict_label,omitempty" query:"dict_label"`       //字典标签
	DictValue  string `protobuf:"bytes,4,opt,name=dict_value,json=dictValue,proto3" form:"dict_value" json:"dict_value,omitempty" query:"dict_value"`       //字典键值
	DictType   string `protobuf:"bytes,5,opt,name=dict_type,json=dictType,proto3" form:"dict_type" json:"dict_type,omitempty" query:"dict_type"`            //字典类型
	CssClass   string `protobuf:"bytes,6,opt,name=css_class,json=cssClass,proto3" form:"css_class" json:"css_class,omitempty" query:"css_class"`            //样式属性（其他样式扩展）
	ListClass  string `protobuf:"bytes,7,opt,name=list_class,json=listClass,proto3" form:"list_class" json:"list_class,omitempty" query:"list_class"`       //表格回显样式
	IsDefault  string `protobuf:"bytes,8,opt,name=is_default,json=isDefault,proto3" form:"is_default" json:"is_default,omitempty" query:"is_default"`       //是否默认（Y是 N否）
	Status     int32  `protobuf:"varint,9,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                     //状态（0：停用，1:正常）
	Remark     string `protobuf:"bytes,10,opt,name=remark,proto3" form:"remark" json:"remark,omitempty" query:"remark"`                                     //备注
	CreateBy   string `protobuf:"bytes,11,opt,name=create_by,json=createBy,proto3" form:"create_by" json:"create_by,omitempty" query:"create_by"`           //创建者
	CreateTime string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"` //创建时间
	UpdateBy   string `protobuf:"bytes,13,opt,name=update_by,json=updateBy,proto3" form:"update_by" json:"update_by,omitempty" query:"update_by"`           //更新者
	UpdateTime string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"` //更新时间
}

func (x *QueryDictDataDetailData) Reset() {
	*x = QueryDictDataDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictDataDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictDataDetailData) ProtoMessage() {}

func (x *QueryDictDataDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictDataDetailData.ProtoReflect.Descriptor instead.
func (*QueryDictDataDetailData) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{10}
}

func (x *QueryDictDataDetailData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryDictDataDetailData) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *QueryDictDataDetailData) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *QueryDictDataDetailData) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *QueryDictDataDetailData) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *QueryDictDataDetailData) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *QueryDictDataDetailData) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *QueryDictDataDetailData) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *QueryDictDataDetailData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryDictDataDetailData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryDictDataDetailData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryDictDataDetailData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryDictDataDetailData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryDictDataDetailData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询字典数据表列表请求参数
type QueryDictDataListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictLabel string `protobuf:"bytes,1,opt,name=dict_label,json=dictLabel,proto3" form:"dictLabel" json:"dictLabel,omitempty"` //字典标签
	DictType  string `protobuf:"bytes,2,opt,name=dict_type,json=dictType,proto3" form:"dictType" json:"dictType,omitempty"`     //字典类型
	Status    int32  `protobuf:"varint,3,opt,name=status,proto3" form:"status" json:"status,omitempty"`                         //状态（0：停用，1:正常）
	PageNum   int32  `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" form:"pageNo" json:"pageNo,omitempty"`          //第几页
	PageSize  int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" form:"pageSize" json:"pageSize,omitempty"`    //每页的数量
}

func (x *QueryDictDataListReq) Reset() {
	*x = QueryDictDataListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictDataListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictDataListReq) ProtoMessage() {}

func (x *QueryDictDataListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictDataListReq.ProtoReflect.Descriptor instead.
func (*QueryDictDataListReq) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{11}
}

func (x *QueryDictDataListReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *QueryDictDataListReq) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *QueryDictDataListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryDictDataListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryDictDataListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryDictDataListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg   string                   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code  api.Code                 `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
	Total int64                    `protobuf:"varint,3,opt,name=Total,proto3" form:"Total" json:"Total,omitempty" query:"Total"`
	Data  []*QueryDictDataListData `protobuf:"bytes,4,rep,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *QueryDictDataListResp) Reset() {
	*x = QueryDictDataListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictDataListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictDataListResp) ProtoMessage() {}

func (x *QueryDictDataListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictDataListResp.ProtoReflect.Descriptor instead.
func (*QueryDictDataListResp) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{12}
}

func (x *QueryDictDataListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryDictDataListResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

func (x *QueryDictDataListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryDictDataListResp) GetData() []*QueryDictDataListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryDictDataListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                                     //字典编码
	DictSort   int32  `protobuf:"varint,2,opt,name=dict_sort,json=dictSort,proto3" form:"dict_sort" json:"dict_sort,omitempty" query:"dict_sort"`           //字典排序
	DictLabel  string `protobuf:"bytes,3,opt,name=dict_label,json=dictLabel,proto3" form:"dict_label" json:"dict_label,omitempty" query:"dict_label"`       //字典标签
	DictValue  string `protobuf:"bytes,4,opt,name=dict_value,json=dictValue,proto3" form:"dict_value" json:"dict_value,omitempty" query:"dict_value"`       //字典键值
	DictType   string `protobuf:"bytes,5,opt,name=dict_type,json=dictType,proto3" form:"dict_type" json:"dict_type,omitempty" query:"dict_type"`            //字典类型
	CssClass   string `protobuf:"bytes,6,opt,name=css_class,json=cssClass,proto3" form:"css_class" json:"css_class,omitempty" query:"css_class"`            //样式属性（其他样式扩展）
	ListClass  string `protobuf:"bytes,7,opt,name=list_class,json=listClass,proto3" form:"list_class" json:"list_class,omitempty" query:"list_class"`       //表格回显样式
	IsDefault  string `protobuf:"bytes,8,opt,name=is_default,json=isDefault,proto3" form:"is_default" json:"is_default,omitempty" query:"is_default"`       //是否默认（Y是 N否）
	Status     int32  `protobuf:"varint,9,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                     //状态（0：停用，1:正常）
	Remark     string `protobuf:"bytes,10,opt,name=remark,proto3" form:"remark" json:"remark,omitempty" query:"remark"`                                     //备注
	CreateBy   string `protobuf:"bytes,11,opt,name=create_by,json=createBy,proto3" form:"create_by" json:"create_by,omitempty" query:"create_by"`           //创建者
	CreateTime string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"` //创建时间
	UpdateBy   string `protobuf:"bytes,13,opt,name=update_by,json=updateBy,proto3" form:"update_by" json:"update_by,omitempty" query:"update_by"`           //更新者
	UpdateTime string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"` //更新时间
}

func (x *QueryDictDataListData) Reset() {
	*x = QueryDictDataListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_dict_data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDictDataListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDictDataListData) ProtoMessage() {}

func (x *QueryDictDataListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_dict_data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDictDataListData.ProtoReflect.Descriptor instead.
func (*QueryDictDataListData) Descriptor() ([]byte, []int) {
	return file_sys_dict_data_proto_rawDescGZIP(), []int{13}
}

func (x *QueryDictDataListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryDictDataListData) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *QueryDictDataListData) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *QueryDictDataListData) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *QueryDictDataListData) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *QueryDictDataListData) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *QueryDictDataListData) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *QueryDictDataListData) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *QueryDictDataListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryDictDataListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryDictDataListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryDictDataListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryDictDataListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryDictDataListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

var File_sys_dict_data_proto protoreflect.FileDescriptor

var file_sys_dict_data_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x79, 0x73, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x09, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x03, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x29, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x64, 0x69,
	0x63, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xca, 0xbb, 0x18, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x09, 0x64,
	0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb,
	0x18, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x64, 0x69, 0x63,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x29, 0x0a, 0x09, 0x63, 0x73, 0x73, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x0a,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d,
	0xca, 0xbb, 0x18, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x42, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x2e, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x69, 0x64, 0x73, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0x45, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xac, 0x03, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x2c, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2c,
	0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x09,
	0x64, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0c, 0xca, 0xbb, 0x18, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x63, 0x73, 0x73, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08,
	0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x6c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x2c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x22,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x45, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x55, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x4b, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x30, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x03, 0x0a, 0x17,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x53, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x73, 0x73, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe5, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x2c, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x29, 0x0a,
	0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a,
	0xca, 0xbb, 0x18, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x91,
	0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xa6, 0x03, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x69, 0x63, 0x74, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x63,
	0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x63, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69,
	0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x73, 0x73, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xeb, 0x05, 0x0a, 0x0f,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12,
	0x64, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x41, 0x64, 0x64, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x24, 0xd2, 0xc1, 0x18, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x64, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2f, 0x61, 0x64, 0x64, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x70, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27,
	0xd2, 0xc1, 0x18, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f,
	0x64, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x70, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x27, 0xd2, 0xc1, 0x18, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x88, 0x01, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2d, 0xd2, 0xc1, 0x18, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2c, 0xd2,
	0xc1, 0x18, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x7c, 0x0a, 0x11, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2a, 0xd2,
	0xc1, 0x18, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x65, 0x69, 0x68, 0x75, 0x61, 0x2f, 0x68,
	0x65, 0x72, 0x74, 0x7a, 0x2d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x69, 0x63, 0x74,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sys_dict_data_proto_rawDescOnce sync.Once
	file_sys_dict_data_proto_rawDescData = file_sys_dict_data_proto_rawDesc
)

func file_sys_dict_data_proto_rawDescGZIP() []byte {
	file_sys_dict_data_proto_rawDescOnce.Do(func() {
		file_sys_dict_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_dict_data_proto_rawDescData)
	})
	return file_sys_dict_data_proto_rawDescData
}

var file_sys_dict_data_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_sys_dict_data_proto_goTypes = []interface{}{
	(*AddDictDataReq)(nil),           // 0: system.AddDictDataReq
	(*AddDictDataResp)(nil),          // 1: system.AddDictDataResp
	(*DeleteDictDataReq)(nil),        // 2: system.DeleteDictDataReq
	(*DeleteDictDataResp)(nil),       // 3: system.DeleteDictDataResp
	(*UpdateDictDataReq)(nil),        // 4: system.UpdateDictDataReq
	(*UpdateDictDataResp)(nil),       // 5: system.UpdateDictDataResp
	(*UpdateDictDataStatusReq)(nil),  // 6: system.UpdateDictDataStatusReq
	(*UpdateDictDataStatusResp)(nil), // 7: system.UpdateDictDataStatusResp
	(*QueryDictDataDetailReq)(nil),   // 8: system.QueryDictDataDetailReq
	(*QueryDictDataDetailResp)(nil),  // 9: system.QueryDictDataDetailResp
	(*QueryDictDataDetailData)(nil),  // 10: system.QueryDictDataDetailData
	(*QueryDictDataListReq)(nil),     // 11: system.QueryDictDataListReq
	(*QueryDictDataListResp)(nil),    // 12: system.QueryDictDataListResp
	(*QueryDictDataListData)(nil),    // 13: system.QueryDictDataListData
	(api.Code)(0),                    // 14: api.Code
}
var file_sys_dict_data_proto_depIdxs = []int32{
	14, // 0: system.AddDictDataResp.code:type_name -> api.Code
	14, // 1: system.DeleteDictDataResp.code:type_name -> api.Code
	14, // 2: system.UpdateDictDataResp.code:type_name -> api.Code
	14, // 3: system.UpdateDictDataStatusResp.code:type_name -> api.Code
	14, // 4: system.QueryDictDataDetailResp.code:type_name -> api.Code
	10, // 5: system.QueryDictDataDetailResp.data:type_name -> system.QueryDictDataDetailData
	14, // 6: system.QueryDictDataListResp.code:type_name -> api.Code
	13, // 7: system.QueryDictDataListResp.data:type_name -> system.QueryDictDataListData
	0,  // 8: system.DictDataHandler.AddDictData:input_type -> system.AddDictDataReq
	2,  // 9: system.DictDataHandler.DeleteDictData:input_type -> system.DeleteDictDataReq
	4,  // 10: system.DictDataHandler.UpdateDictData:input_type -> system.UpdateDictDataReq
	6,  // 11: system.DictDataHandler.UpdateDictDataStatus:input_type -> system.UpdateDictDataStatusReq
	8,  // 12: system.DictDataHandler.QueryDictDataDetail:input_type -> system.QueryDictDataDetailReq
	11, // 13: system.DictDataHandler.QueryDictDataList:input_type -> system.QueryDictDataListReq
	1,  // 14: system.DictDataHandler.AddDictData:output_type -> system.AddDictDataResp
	3,  // 15: system.DictDataHandler.DeleteDictData:output_type -> system.DeleteDictDataResp
	5,  // 16: system.DictDataHandler.UpdateDictData:output_type -> system.UpdateDictDataResp
	7,  // 17: system.DictDataHandler.UpdateDictDataStatus:output_type -> system.UpdateDictDataStatusResp
	9,  // 18: system.DictDataHandler.QueryDictDataDetail:output_type -> system.QueryDictDataDetailResp
	12, // 19: system.DictDataHandler.QueryDictDataList:output_type -> system.QueryDictDataListResp
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_sys_dict_data_proto_init() }
func file_sys_dict_data_proto_init() {
	if File_sys_dict_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_dict_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDictDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDictDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDictDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDictDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictDataStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDictDataStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDictDataDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDictDataDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDictDataDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDictDataListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDictDataListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_dict_data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDictDataListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_dict_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sys_dict_data_proto_goTypes,
		DependencyIndexes: file_sys_dict_data_proto_depIdxs,
		MessageInfos:      file_sys_dict_data_proto_msgTypes,
	}.Build()
	File_sys_dict_data_proto = out.File
	file_sys_dict_data_proto_rawDesc = nil
	file_sys_dict_data_proto_goTypes = nil
	file_sys_dict_data_proto_depIdxs = nil
}
