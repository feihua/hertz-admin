// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: sys_role.proto

package role

import (
	api "github.com/feihua/hertz-admin/biz/model/system/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加角色信息请求参数
type AddRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark    string `protobuf:"bytes,1,opt,name=remark,proto3" form:"remark" json:"remark,omitempty"`                           //备注
	RoleName  string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" form:"roleName" json:"roleName,omitempty"`      //名称
	RoleKey   string `protobuf:"bytes,3,opt,name=role_key,json=roleKey,proto3" form:"roleKey" json:"roleKey,omitempty"`          //角色权限字符串
	DataScope int32  `protobuf:"varint,4,opt,name=data_scope,json=dataScope,proto3" form:"dataScope" json:"dataScope,omitempty"` //数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限）
	Status    int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty"`                          //状态(1:正常，0:禁用)
}

func (x *AddRoleReq) Reset() {
	*x = AddRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleReq) ProtoMessage() {}

func (x *AddRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleReq.ProtoReflect.Descriptor instead.
func (*AddRoleReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{0}
}

func (x *AddRoleReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *AddRoleReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *AddRoleReq) GetDataScope() int32 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *AddRoleReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AddRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *AddRoleResp) Reset() {
	*x = AddRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleResp) ProtoMessage() {}

func (x *AddRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleResp.ProtoReflect.Descriptor instead.
func (*AddRoleResp) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{1}
}

func (x *AddRoleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddRoleResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 删除角色信息请求参数
type DeleteRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" form:"ids" json:"ids,omitempty"`
}

func (x *DeleteRoleReq) Reset() {
	*x = DeleteRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleReq) ProtoMessage() {}

func (x *DeleteRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleReq.ProtoReflect.Descriptor instead.
func (*DeleteRoleReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteRoleReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *DeleteRoleResp) Reset() {
	*x = DeleteRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResp) ProtoMessage() {}

func (x *DeleteRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResp.ProtoReflect.Descriptor instead.
func (*DeleteRoleResp) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteRoleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteRoleResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 更新角色信息请求参数
type UpdateRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"`                                      //主键
	RoleName  string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" form:"roleName" json:"roleName,omitempty"`      //名称
	RoleKey   string `protobuf:"bytes,3,opt,name=role_key,json=roleKey,proto3" form:"roleKey" json:"roleKey,omitempty"`          //角色权限字符串
	DataScope int32  `protobuf:"varint,4,opt,name=data_scope,json=dataScope,proto3" form:"dataScope" json:"dataScope,omitempty"` //数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限）
	Status    int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty"`                          //状态(1:正常，0:禁用)
	Remark    string `protobuf:"bytes,6,opt,name=remark,proto3" form:"remark" json:"remark,omitempty"`                           //备注
}

func (x *UpdateRoleReq) Reset() {
	*x = UpdateRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleReq) ProtoMessage() {}

func (x *UpdateRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRoleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UpdateRoleReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *UpdateRoleReq) GetDataScope() int32 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *UpdateRoleReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateRoleReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateRoleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *UpdateRoleResp) Reset() {
	*x = UpdateRoleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleResp) ProtoMessage() {}

func (x *UpdateRoleResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleResp.ProtoReflect.Descriptor instead.
func (*UpdateRoleResp) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRoleResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateRoleResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 更新角色信息状态请求参数
type UpdateRoleStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []int64 `protobuf:"varint,1,rep,packed,name=id,proto3" form:"id" json:"id,omitempty"`      //主键
	Status int32   `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty"` //状态(1:正常，0:禁用)
}

func (x *UpdateRoleStatusReq) Reset() {
	*x = UpdateRoleStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleStatusReq) ProtoMessage() {}

func (x *UpdateRoleStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateRoleStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRoleStatusReq) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateRoleStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateRoleStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *UpdateRoleStatusResp) Reset() {
	*x = UpdateRoleStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleStatusResp) ProtoMessage() {}

func (x *UpdateRoleStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateRoleStatusResp) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateRoleStatusResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateRoleStatusResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 查询角色信息详情请求参数
type QueryRoleDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"` //主键
}

func (x *QueryRoleDetailReq) Reset() {
	*x = QueryRoleDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleDetailReq) ProtoMessage() {}

func (x *QueryRoleDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleDetailReq.ProtoReflect.Descriptor instead.
func (*QueryRoleDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{8}
}

func (x *QueryRoleDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryRoleDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string               `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code             `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
	Data *QueryRoleDetailData `protobuf:"bytes,3,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *QueryRoleDetailResp) Reset() {
	*x = QueryRoleDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleDetailResp) ProtoMessage() {}

func (x *QueryRoleDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleDetailResp.ProtoReflect.Descriptor instead.
func (*QueryRoleDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{9}
}

func (x *QueryRoleDetailResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryRoleDetailResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

func (x *QueryRoleDetailResp) GetData() *QueryRoleDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryRoleDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                                     //主键
	RoleName   string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" form:"role_name" json:"role_name,omitempty" query:"role_name"`            //名称
	RoleKey    string `protobuf:"bytes,3,opt,name=role_key,json=roleKey,proto3" form:"role_key" json:"role_key,omitempty" query:"role_key"`                 //角色权限字符串
	DataScope  int32  `protobuf:"varint,4,opt,name=data_scope,json=dataScope,proto3" form:"data_scope" json:"data_scope,omitempty" query:"data_scope"`      //数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限）
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                     //状态(1:正常，0:禁用)
	Remark     string `protobuf:"bytes,6,opt,name=remark,proto3" form:"remark" json:"remark,omitempty" query:"remark"`                                      //备注
	DelFlag    int32  `protobuf:"varint,7,opt,name=del_flag,json=delFlag,proto3" form:"del_flag" json:"del_flag,omitempty" query:"del_flag"`                //删除标志（0代表删除 1代表存在）
	CreateBy   string `protobuf:"bytes,8,opt,name=create_by,json=createBy,proto3" form:"create_by" json:"create_by,omitempty" query:"create_by"`            //创建者
	CreateTime string `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"`  //创建时间
	UpdateBy   string `protobuf:"bytes,10,opt,name=update_by,json=updateBy,proto3" form:"update_by" json:"update_by,omitempty" query:"update_by"`           //更新者
	UpdateTime string `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"` //更新时间
}

func (x *QueryRoleDetailData) Reset() {
	*x = QueryRoleDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleDetailData) ProtoMessage() {}

func (x *QueryRoleDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleDetailData.ProtoReflect.Descriptor instead.
func (*QueryRoleDetailData) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{10}
}

func (x *QueryRoleDetailData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryRoleDetailData) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *QueryRoleDetailData) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *QueryRoleDetailData) GetDataScope() int32 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *QueryRoleDetailData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryRoleDetailData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryRoleDetailData) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *QueryRoleDetailData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryRoleDetailData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryRoleDetailData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryRoleDetailData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询角色信息列表请求参数
type QueryRoleListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName  string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" form:"roleName" json:"roleName,omitempty"`      //名称
	RoleKey   string `protobuf:"bytes,3,opt,name=role_key,json=roleKey,proto3" form:"roleKey" json:"roleKey,omitempty"`          //角色权限字符串
	DataScope int32  `protobuf:"varint,4,opt,name=data_scope,json=dataScope,proto3" form:"dataScope" json:"dataScope,omitempty"` //数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限）
	Status    int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty"`                          //状态(1:正常，0:禁用)
	PageNum   int32  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" form:"pageNo" json:"pageNo,omitempty"`           //第几页
	PageSize  int32  `protobuf:"varint,9,opt,name=page_size,json=pageSize,proto3" form:"pageSize" json:"pageSize,omitempty"`     //每页的数量
}

func (x *QueryRoleListReq) Reset() {
	*x = QueryRoleListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleListReq) ProtoMessage() {}

func (x *QueryRoleListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleListReq.ProtoReflect.Descriptor instead.
func (*QueryRoleListReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{11}
}

func (x *QueryRoleListReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *QueryRoleListReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *QueryRoleListReq) GetDataScope() int32 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *QueryRoleListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryRoleListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryRoleListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryRoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg   string               `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code  api.Code             `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
	Total int64                `protobuf:"varint,3,opt,name=Total,proto3" form:"Total" json:"Total,omitempty" query:"Total"`
	Data  []*QueryRoleListData `protobuf:"bytes,4,rep,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *QueryRoleListResp) Reset() {
	*x = QueryRoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleListResp) ProtoMessage() {}

func (x *QueryRoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleListResp.ProtoReflect.Descriptor instead.
func (*QueryRoleListResp) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{12}
}

func (x *QueryRoleListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryRoleListResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

func (x *QueryRoleListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryRoleListResp) GetData() []*QueryRoleListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryRoleListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                                     //主键
	RoleName   string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" form:"role_name" json:"role_name,omitempty" query:"role_name"`            //名称
	RoleKey    string `protobuf:"bytes,3,opt,name=role_key,json=roleKey,proto3" form:"role_key" json:"role_key,omitempty" query:"role_key"`                 //角色权限字符串
	DataScope  int32  `protobuf:"varint,4,opt,name=data_scope,json=dataScope,proto3" form:"data_scope" json:"data_scope,omitempty" query:"data_scope"`      //数据范围（1：全部数据权限 2：自定数据权限 3：本部门数据权限 4：本部门及以下数据权限）
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                     //状态(1:正常，0:禁用)
	Remark     string `protobuf:"bytes,6,opt,name=remark,proto3" form:"remark" json:"remark,omitempty" query:"remark"`                                      //备注
	DelFlag    int32  `protobuf:"varint,7,opt,name=del_flag,json=delFlag,proto3" form:"del_flag" json:"del_flag,omitempty" query:"del_flag"`                //删除标志（0代表删除 1代表存在）
	CreateBy   string `protobuf:"bytes,8,opt,name=create_by,json=createBy,proto3" form:"create_by" json:"create_by,omitempty" query:"create_by"`            //创建者
	CreateTime string `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"`  //创建时间
	UpdateBy   string `protobuf:"bytes,10,opt,name=update_by,json=updateBy,proto3" form:"update_by" json:"update_by,omitempty" query:"update_by"`           //更新者
	UpdateTime string `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"` //更新时间
}

func (x *QueryRoleListData) Reset() {
	*x = QueryRoleListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleListData) ProtoMessage() {}

func (x *QueryRoleListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleListData.ProtoReflect.Descriptor instead.
func (*QueryRoleListData) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{13}
}

func (x *QueryRoleListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryRoleListData) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *QueryRoleListData) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *QueryRoleListData) GetDataScope() int32 {
	if x != nil {
		return x.DataScope
	}
	return 0
}

func (x *QueryRoleListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryRoleListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryRoleListData) GetDelFlag() int32 {
	if x != nil {
		return x.DelFlag
	}
	return 0
}

func (x *QueryRoleListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryRoleListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryRoleListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryRoleListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询角色菜单关联列表
type QueryRoleMenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" form:"roleId" json:"roleId,omitempty"` //名称
}

func (x *QueryRoleMenuListReq) Reset() {
	*x = QueryRoleMenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleMenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleMenuListReq) ProtoMessage() {}

func (x *QueryRoleMenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleMenuListReq.ProtoReflect.Descriptor instead.
func (*QueryRoleMenuListReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{14}
}

func (x *QueryRoleMenuListReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type QueryRoleMenuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string                 `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code               `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
	Data *QueryRoleMenuListData `protobuf:"bytes,3,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *QueryRoleMenuListResp) Reset() {
	*x = QueryRoleMenuListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleMenuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleMenuListResp) ProtoMessage() {}

func (x *QueryRoleMenuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleMenuListResp.ProtoReflect.Descriptor instead.
func (*QueryRoleMenuListResp) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{15}
}

func (x *QueryRoleMenuListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryRoleMenuListResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

func (x *QueryRoleMenuListResp) GetData() *QueryRoleMenuListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryRoleMenuListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuIds  []int64             `protobuf:"varint,1,rep,packed,name=menu_ids,json=menuIds,proto3" form:"menu_ids" json:"menu_ids,omitempty" query:"menu_ids"` //主键
	MenuList []*RoleMenuListData `protobuf:"bytes,2,rep,name=menu_list,json=menuList,proto3" form:"menu_list" json:"menu_list,omitempty" query:"menu_list"`    //名称
}

func (x *QueryRoleMenuListData) Reset() {
	*x = QueryRoleMenuListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleMenuListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleMenuListData) ProtoMessage() {}

func (x *QueryRoleMenuListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleMenuListData.ProtoReflect.Descriptor instead.
func (*QueryRoleMenuListData) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{16}
}

func (x *QueryRoleMenuListData) GetMenuIds() []int64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

func (x *QueryRoleMenuListData) GetMenuList() []*RoleMenuListData {
	if x != nil {
		return x.MenuList
	}
	return nil
}

type RoleMenuListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                             //主键
	Key           string `protobuf:"bytes,2,opt,name=key,proto3" form:"key" json:"key,omitempty" query:"key"`                                          //主键
	Title         string `protobuf:"bytes,3,opt,name=title,proto3" form:"title" json:"title,omitempty" query:"title"`                                  //菜单名称
	Label         string `protobuf:"bytes,4,opt,name=label,proto3" form:"label" json:"label,omitempty" query:"label"`                                  //菜单名称
	ParentId      int64  `protobuf:"varint,5,opt,name=parent_id,json=parentId,proto3" form:"parent_id" json:"parent_id,omitempty" query:"parent_id"`   //父菜单ID，一级菜单为0
	IsPenultimate bool   `protobuf:"varint,6,opt,name=isPenultimate,proto3" form:"isPenultimate" json:"isPenultimate,omitempty" query:"isPenultimate"` //
}

func (x *RoleMenuListData) Reset() {
	*x = RoleMenuListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuListData) ProtoMessage() {}

func (x *RoleMenuListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuListData.ProtoReflect.Descriptor instead.
func (*RoleMenuListData) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{17}
}

func (x *RoleMenuListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleMenuListData) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RoleMenuListData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RoleMenuListData) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RoleMenuListData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *RoleMenuListData) GetIsPenultimate() bool {
	if x != nil {
		return x.IsPenultimate
	}
	return false
}

type AddRoleMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  int64   `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" form:"roleId" json:"roleId,omitempty"`            //角色ID
	MenuIds []int64 `protobuf:"varint,2,rep,packed,name=menu_ids,json=menuIds,proto3" form:"menuIds" json:"menuIds,omitempty"` //菜单ID集合
}

func (x *AddRoleMenuReq) Reset() {
	*x = AddRoleMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleMenuReq) ProtoMessage() {}

func (x *AddRoleMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleMenuReq.ProtoReflect.Descriptor instead.
func (*AddRoleMenuReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{18}
}

func (x *AddRoleMenuReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *AddRoleMenuReq) GetMenuIds() []int64 {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

type AddRoleMenuResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *AddRoleMenuResp) Reset() {
	*x = AddRoleMenuResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleMenuResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleMenuResp) ProtoMessage() {}

func (x *AddRoleMenuResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleMenuResp.ProtoReflect.Descriptor instead.
func (*AddRoleMenuResp) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{19}
}

func (x *AddRoleMenuResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddRoleMenuResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 根据roleId分页查询用户信息列表
type QueryRoleUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile   string `protobuf:"bytes,2,opt,name=mobile,proto3" form:"mobile" json:"mobile,omitempty"`                       //手机号码
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" form:"userName" json:"userName,omitempty"`  //用户账号
	RoleId   int64  `protobuf:"varint,4,opt,name=role_id,json=roleId,proto3" form:"roleId" json:"roleId,omitempty"`         //第几页
	PageNum  int32  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" form:"pageNo" json:"pageNo,omitempty"`       //第几页
	PageSize int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" form:"pageSize" json:"pageSize,omitempty"` //每页的数量
}

func (x *QueryRoleUserListReq) Reset() {
	*x = QueryRoleUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleUserListReq) ProtoMessage() {}

func (x *QueryRoleUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleUserListReq.ProtoReflect.Descriptor instead.
func (*QueryRoleUserListReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{20}
}

func (x *QueryRoleUserListReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *QueryRoleUserListReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *QueryRoleUserListReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *QueryRoleUserListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryRoleUserListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryRoleUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg   string                   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code  api.Code                 `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
	Total int64                    `protobuf:"varint,3,opt,name=Total,proto3" form:"Total" json:"Total,omitempty" query:"Total"`
	Data  []*QueryRoleUserListData `protobuf:"bytes,4,rep,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *QueryRoleUserListResp) Reset() {
	*x = QueryRoleUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleUserListResp) ProtoMessage() {}

func (x *QueryRoleUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleUserListResp.ProtoReflect.Descriptor instead.
func (*QueryRoleUserListResp) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{21}
}

func (x *QueryRoleUserListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryRoleUserListResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

func (x *QueryRoleUserListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryRoleUserListResp) GetData() []*QueryRoleUserListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryRoleUserListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                                     //主键
	Mobile     string `protobuf:"bytes,2,opt,name=mobile,proto3" form:"mobile" json:"mobile,omitempty" query:"mobile"`                                      //手机号码
	UserName   string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" form:"user_name" json:"user_name,omitempty" query:"user_name"`            //用户账号
	NickName   string `protobuf:"bytes,4,opt,name=nick_name,json=nickName,proto3" form:"nick_name" json:"nick_name,omitempty" query:"nick_name"`            //用户昵称
	UserType   string `protobuf:"bytes,5,opt,name=user_type,json=userType,proto3" form:"user_type" json:"user_type,omitempty" query:"user_type"`            //用户类型（00系统用户）
	Avatar     string `protobuf:"bytes,6,opt,name=avatar,proto3" form:"avatar" json:"avatar,omitempty" query:"avatar"`                                      //头像路径
	Email      string `protobuf:"bytes,7,opt,name=email,proto3" form:"email" json:"email,omitempty" query:"email"`                                          //用户邮箱
	Status     int32  `protobuf:"varint,8,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                     //状态(1:正常，0:禁用)
	DeptId     int64  `protobuf:"varint,9,opt,name=dept_id,json=deptId,proto3" form:"dept_id" json:"dept_id,omitempty" query:"dept_id"`                     //部门ID
	Remark     string `protobuf:"bytes,10,opt,name=remark,proto3" form:"remark" json:"remark,omitempty" query:"remark"`                                     //备注
	CreateBy   string `protobuf:"bytes,11,opt,name=create_by,json=createBy,proto3" form:"create_by" json:"create_by,omitempty" query:"create_by"`           //创建者
	CreateTime string `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"` //创建时间
	UpdateBy   string `protobuf:"bytes,13,opt,name=update_by,json=updateBy,proto3" form:"update_by" json:"update_by,omitempty" query:"update_by"`           //更新者
	UpdateTime string `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"` //更新时间
}

func (x *QueryRoleUserListData) Reset() {
	*x = QueryRoleUserListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleUserListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleUserListData) ProtoMessage() {}

func (x *QueryRoleUserListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleUserListData.ProtoReflect.Descriptor instead.
func (*QueryRoleUserListData) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{22}
}

func (x *QueryRoleUserListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryRoleUserListData) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *QueryRoleUserListData) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *QueryRoleUserListData) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *QueryRoleUserListData) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *QueryRoleUserListData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QueryRoleUserListData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *QueryRoleUserListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryRoleUserListData) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *QueryRoleUserListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryRoleUserListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryRoleUserListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryRoleUserListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryRoleUserListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type CancelAuthUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" form:"roleId" json:"roleId,omitempty"` //角色ID
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" form:"userId" json:"userId,omitempty"` //用户ID
}

func (x *CancelAuthUserReq) Reset() {
	*x = CancelAuthUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAuthUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAuthUserReq) ProtoMessage() {}

func (x *CancelAuthUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAuthUserReq.ProtoReflect.Descriptor instead.
func (*CancelAuthUserReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{23}
}

func (x *CancelAuthUserReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *CancelAuthUserReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CancelAuthUserAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64   `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" form:"roleId" json:"roleId,omitempty"`        //角色ID
	UserId []int64 `protobuf:"varint,2,rep,packed,name=user_id,json=userId,proto3" form:"userId" json:"userId,omitempty"` //用户ID
}

func (x *CancelAuthUserAllReq) Reset() {
	*x = CancelAuthUserAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelAuthUserAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelAuthUserAllReq) ProtoMessage() {}

func (x *CancelAuthUserAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelAuthUserAllReq.ProtoReflect.Descriptor instead.
func (*CancelAuthUserAllReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{24}
}

func (x *CancelAuthUserAllReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *CancelAuthUserAllReq) GetUserId() []int64 {
	if x != nil {
		return x.UserId
	}
	return nil
}

type SelectAuthUserAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64   `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" form:"roleId" json:"roleId,omitempty"`        //角色ID
	UserId []int64 `protobuf:"varint,2,rep,packed,name=user_id,json=userId,proto3" form:"userId" json:"userId,omitempty"` //用户ID
}

func (x *SelectAuthUserAllReq) Reset() {
	*x = SelectAuthUserAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectAuthUserAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectAuthUserAllReq) ProtoMessage() {}

func (x *SelectAuthUserAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectAuthUserAllReq.ProtoReflect.Descriptor instead.
func (*SelectAuthUserAllReq) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{25}
}

func (x *SelectAuthUserAllReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *SelectAuthUserAllReq) GetUserId() []int64 {
	if x != nil {
		return x.UserId
	}
	return nil
}

type AuthorizationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *AuthorizationResp) Reset() {
	*x = AuthorizationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_role_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationResp) ProtoMessage() {}

func (x *AuthorizationResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_role_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationResp.ProtoReflect.Descriptor instead.
func (*AuthorizationResp) Descriptor() ([]byte, []int) {
	return file_sys_role_proto_rawDescGZIP(), []int{26}
}

func (x *AuthorizationResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AuthorizationResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

var File_sys_role_proto protoreflect.FileDescriptor

var file_sys_role_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x79, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x29, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0d, 0xca,
	0xbb, 0x18, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3e, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2a, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x69,
	0x64, 0x73, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x41, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0d, 0xca, 0xbb, 0x18,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x41, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x51, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x47, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x12,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06,
	0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0x77, 0x0a, 0x13, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xc3, 0x02, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x10, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x29,
	0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x2c, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x6f, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xca,
	0xbb, 0x18, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xc1, 0x02, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a,
	0xca, 0xbb, 0x18, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x7b, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x69, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75,
	0x49, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x10, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73,
	0x50, 0x65, 0x6e, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x22, 0x5d, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x6d,
	0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x22,
	0x42, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb,
	0x18, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x29, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xca, 0xbb,
	0x18, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x89, 0x03, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xca,
	0xbb, 0x18, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x60, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x42,
	0x0a, 0xca, 0xbb, 0x18, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x14, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xca, 0xbb,
	0x18, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x03, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x32, 0x91, 0x0b, 0x0a, 0x0b,
	0x52, 0x6f, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1c, 0xd2, 0xc1, 0x18, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x61, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x5c, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0xd2, 0xc1, 0x18, 0x1b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x6c, 0x65,
	0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x5c, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1f, 0xd2, 0xc1, 0x18, 0x1b, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x74, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0xd2, 0xc1, 0x18, 0x21, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x70, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0xd2, 0xc1, 0x18,
	0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x6c,
	0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x68, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x22, 0xd2, 0xc1, 0x18, 0x1e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x74, 0x0a, 0x11, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x22, 0xd2,
	0xc1, 0x18, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x72,
	0x6f, 0x6c, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x63, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x23, 0xd2, 0xc1, 0x18, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x76, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0xd2, 0xc1, 0x18, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x7a,
	0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x6e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x29, 0xd2, 0xc1, 0x18, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x55, 0x6e, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x0e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x23, 0xd2, 0xc1, 0x18, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41,
	0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x78, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x75,
	0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x28, 0xd2, 0xc1, 0x18, 0x24, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x6c, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x22, 0xd2, 0xc1, 0x18,
	0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x72, 0x6f, 0x6c,
	0x65, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x65,
	0x69, 0x68, 0x75, 0x61, 0x2f, 0x68, 0x65, 0x72, 0x74, 0x7a, 0x2d, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sys_role_proto_rawDescOnce sync.Once
	file_sys_role_proto_rawDescData = file_sys_role_proto_rawDesc
)

func file_sys_role_proto_rawDescGZIP() []byte {
	file_sys_role_proto_rawDescOnce.Do(func() {
		file_sys_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_role_proto_rawDescData)
	})
	return file_sys_role_proto_rawDescData
}

var file_sys_role_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_sys_role_proto_goTypes = []interface{}{
	(*AddRoleReq)(nil),            // 0: system.AddRoleReq
	(*AddRoleResp)(nil),           // 1: system.AddRoleResp
	(*DeleteRoleReq)(nil),         // 2: system.DeleteRoleReq
	(*DeleteRoleResp)(nil),        // 3: system.DeleteRoleResp
	(*UpdateRoleReq)(nil),         // 4: system.UpdateRoleReq
	(*UpdateRoleResp)(nil),        // 5: system.UpdateRoleResp
	(*UpdateRoleStatusReq)(nil),   // 6: system.UpdateRoleStatusReq
	(*UpdateRoleStatusResp)(nil),  // 7: system.UpdateRoleStatusResp
	(*QueryRoleDetailReq)(nil),    // 8: system.QueryRoleDetailReq
	(*QueryRoleDetailResp)(nil),   // 9: system.QueryRoleDetailResp
	(*QueryRoleDetailData)(nil),   // 10: system.QueryRoleDetailData
	(*QueryRoleListReq)(nil),      // 11: system.QueryRoleListReq
	(*QueryRoleListResp)(nil),     // 12: system.QueryRoleListResp
	(*QueryRoleListData)(nil),     // 13: system.QueryRoleListData
	(*QueryRoleMenuListReq)(nil),  // 14: system.QueryRoleMenuListReq
	(*QueryRoleMenuListResp)(nil), // 15: system.QueryRoleMenuListResp
	(*QueryRoleMenuListData)(nil), // 16: system.QueryRoleMenuListData
	(*RoleMenuListData)(nil),      // 17: system.RoleMenuListData
	(*AddRoleMenuReq)(nil),        // 18: system.AddRoleMenuReq
	(*AddRoleMenuResp)(nil),       // 19: system.AddRoleMenuResp
	(*QueryRoleUserListReq)(nil),  // 20: system.QueryRoleUserListReq
	(*QueryRoleUserListResp)(nil), // 21: system.QueryRoleUserListResp
	(*QueryRoleUserListData)(nil), // 22: system.QueryRoleUserListData
	(*CancelAuthUserReq)(nil),     // 23: system.CancelAuthUserReq
	(*CancelAuthUserAllReq)(nil),  // 24: system.CancelAuthUserAllReq
	(*SelectAuthUserAllReq)(nil),  // 25: system.SelectAuthUserAllReq
	(*AuthorizationResp)(nil),     // 26: system.AuthorizationResp
	(api.Code)(0),                 // 27: api.Code
}
var file_sys_role_proto_depIdxs = []int32{
	27, // 0: system.AddRoleResp.code:type_name -> api.Code
	27, // 1: system.DeleteRoleResp.code:type_name -> api.Code
	27, // 2: system.UpdateRoleResp.code:type_name -> api.Code
	27, // 3: system.UpdateRoleStatusResp.code:type_name -> api.Code
	27, // 4: system.QueryRoleDetailResp.code:type_name -> api.Code
	10, // 5: system.QueryRoleDetailResp.data:type_name -> system.QueryRoleDetailData
	27, // 6: system.QueryRoleListResp.code:type_name -> api.Code
	13, // 7: system.QueryRoleListResp.data:type_name -> system.QueryRoleListData
	27, // 8: system.QueryRoleMenuListResp.code:type_name -> api.Code
	16, // 9: system.QueryRoleMenuListResp.data:type_name -> system.QueryRoleMenuListData
	17, // 10: system.QueryRoleMenuListData.menu_list:type_name -> system.RoleMenuListData
	27, // 11: system.AddRoleMenuResp.code:type_name -> api.Code
	27, // 12: system.QueryRoleUserListResp.code:type_name -> api.Code
	22, // 13: system.QueryRoleUserListResp.data:type_name -> system.QueryRoleUserListData
	27, // 14: system.AuthorizationResp.code:type_name -> api.Code
	0,  // 15: system.RoleHandler.AddRole:input_type -> system.AddRoleReq
	2,  // 16: system.RoleHandler.DeleteRole:input_type -> system.DeleteRoleReq
	4,  // 17: system.RoleHandler.UpdateRole:input_type -> system.UpdateRoleReq
	6,  // 18: system.RoleHandler.UpdateRoleStatus:input_type -> system.UpdateRoleStatusReq
	8,  // 19: system.RoleHandler.QueryRoleDetail:input_type -> system.QueryRoleDetailReq
	11, // 20: system.RoleHandler.QueryRoleList:input_type -> system.QueryRoleListReq
	14, // 21: system.RoleHandler.QueryRoleMenuList:input_type -> system.QueryRoleMenuListReq
	18, // 22: system.RoleHandler.AddRoleMenu:input_type -> system.AddRoleMenuReq
	20, // 23: system.RoleHandler.QueryAllocatedList:input_type -> system.QueryRoleUserListReq
	20, // 24: system.RoleHandler.QueryUnallocatedList:input_type -> system.QueryRoleUserListReq
	23, // 25: system.RoleHandler.CancelAuthUser:input_type -> system.CancelAuthUserReq
	24, // 26: system.RoleHandler.BatchCancelAuthUser:input_type -> system.CancelAuthUserAllReq
	25, // 27: system.RoleHandler.BatchAuthUser:input_type -> system.SelectAuthUserAllReq
	1,  // 28: system.RoleHandler.AddRole:output_type -> system.AddRoleResp
	3,  // 29: system.RoleHandler.DeleteRole:output_type -> system.DeleteRoleResp
	5,  // 30: system.RoleHandler.UpdateRole:output_type -> system.UpdateRoleResp
	7,  // 31: system.RoleHandler.UpdateRoleStatus:output_type -> system.UpdateRoleStatusResp
	9,  // 32: system.RoleHandler.QueryRoleDetail:output_type -> system.QueryRoleDetailResp
	12, // 33: system.RoleHandler.QueryRoleList:output_type -> system.QueryRoleListResp
	15, // 34: system.RoleHandler.QueryRoleMenuList:output_type -> system.QueryRoleMenuListResp
	19, // 35: system.RoleHandler.AddRoleMenu:output_type -> system.AddRoleMenuResp
	26, // 36: system.RoleHandler.QueryAllocatedList:output_type -> system.AuthorizationResp
	26, // 37: system.RoleHandler.QueryUnallocatedList:output_type -> system.AuthorizationResp
	26, // 38: system.RoleHandler.CancelAuthUser:output_type -> system.AuthorizationResp
	26, // 39: system.RoleHandler.BatchCancelAuthUser:output_type -> system.AuthorizationResp
	26, // 40: system.RoleHandler.BatchAuthUser:output_type -> system.AuthorizationResp
	28, // [28:41] is the sub-list for method output_type
	15, // [15:28] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_sys_role_proto_init() }
func file_sys_role_proto_init() {
	if File_sys_role_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleMenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleMenuListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleMenuListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleMenuResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleUserListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAuthUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelAuthUserAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectAuthUserAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_role_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_role_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sys_role_proto_goTypes,
		DependencyIndexes: file_sys_role_proto_depIdxs,
		MessageInfos:      file_sys_role_proto_msgTypes,
	}.Build()
	File_sys_role_proto = out.File
	file_sys_role_proto_rawDesc = nil
	file_sys_role_proto_goTypes = nil
	file_sys_role_proto_depIdxs = nil
}
