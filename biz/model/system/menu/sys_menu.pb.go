// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: sys_menu.proto

package menu

import (
	_ "github.com/feihua/hertz-admin/biz/model/system/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加菜单信息请求参数
type AddMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark   string `protobuf:"bytes,1,opt,name=remark,proto3" form:"remark" json:"remark,omitempty"`                       //备注
	MenuName string `protobuf:"bytes,2,opt,name=menu_name,json=menuName,proto3" form:"menuName" json:"menuName,omitempty"`  //菜单名称
	MenuType int32  `protobuf:"varint,3,opt,name=menu_type,json=menuType,proto3" form:"menuType" json:"menuType,omitempty"` //菜单类型(1：目录   2：菜单   3：按钮)
	Visible  int32  `protobuf:"varint,4,opt,name=visible,proto3" form:"visible" json:"visible,omitempty"`                   //显示状态（0:隐藏, 显示:1）
	Status   int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty"`                      //菜单状态(1:正常，0:禁用)
	Sort     int32  `protobuf:"varint,6,opt,name=sort,proto3" form:"sort" json:"sort,omitempty"`                            //排序
	ParentId int64  `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" form:"parentId" json:"parentId,omitempty"` //父ID
	MenuUrl  string `protobuf:"bytes,8,opt,name=menu_url,json=menuUrl,proto3" form:"menuUrl" json:"menuUrl,omitempty"`      //路由路径
	ApiUrl   string `protobuf:"bytes,9,opt,name=api_url,json=apiUrl,proto3" form:"apiUrl" json:"apiUrl,omitempty"`          //接口URL
	MenuIcon string `protobuf:"bytes,10,opt,name=menu_icon,json=menuIcon,proto3" form:"menuIcon" json:"menuIcon,omitempty"` //菜单图标
}

func (x *AddMenuReq) Reset() {
	*x = AddMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_menu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMenuReq) ProtoMessage() {}

func (x *AddMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_menu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMenuReq.ProtoReflect.Descriptor instead.
func (*AddMenuReq) Descriptor() ([]byte, []int) {
	return file_sys_menu_proto_rawDescGZIP(), []int{0}
}

func (x *AddMenuReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddMenuReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *AddMenuReq) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *AddMenuReq) GetVisible() int32 {
	if x != nil {
		return x.Visible
	}
	return 0
}

func (x *AddMenuReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddMenuReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *AddMenuReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *AddMenuReq) GetMenuUrl() string {
	if x != nil {
		return x.MenuUrl
	}
	return ""
}

func (x *AddMenuReq) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *AddMenuReq) GetMenuIcon() string {
	if x != nil {
		return x.MenuIcon
	}
	return ""
}

// 删除菜单信息请求参数
type DeleteMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"`
}

func (x *DeleteMenuReq) Reset() {
	*x = DeleteMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_menu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuReq) ProtoMessage() {}

func (x *DeleteMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_menu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuReq.ProtoReflect.Descriptor instead.
func (*DeleteMenuReq) Descriptor() ([]byte, []int) {
	return file_sys_menu_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteMenuReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 更新菜单信息请求参数
type UpdateMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"`                                  //主键
	MenuName string `protobuf:"bytes,2,opt,name=menu_name,json=menuName,proto3" form:"menuName" json:"menuName,omitempty"`  //菜单名称
	MenuType int32  `protobuf:"varint,3,opt,name=menu_type,json=menuType,proto3" form:"menuType" json:"menuType,omitempty"` //菜单类型(1：目录   2：菜单   3：按钮)
	Visible  int32  `protobuf:"varint,4,opt,name=visible,proto3" form:"visible" json:"visible,omitempty"`                   //显示状态（0:隐藏, 显示:1）
	Status   int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty"`                      //菜单状态(1:正常，0:禁用)
	Sort     int32  `protobuf:"varint,6,opt,name=sort,proto3" form:"sort" json:"sort,omitempty"`                            //排序
	ParentId int64  `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" form:"parentId" json:"parentId,omitempty"` //父ID
	MenuUrl  string `protobuf:"bytes,8,opt,name=menu_url,json=menuUrl,proto3" form:"menuUrl" json:"menuUrl,omitempty"`      //路由路径
	ApiUrl   string `protobuf:"bytes,9,opt,name=api_url,json=apiUrl,proto3" form:"apiUrl" json:"apiUrl,omitempty"`          //接口URL
	MenuIcon string `protobuf:"bytes,10,opt,name=menu_icon,json=menuIcon,proto3" form:"menuIcon" json:"menuIcon,omitempty"` //菜单图标
	Remark   string `protobuf:"bytes,11,opt,name=remark,proto3" form:"remark" json:"remark,omitempty"`                      //备注
}

func (x *UpdateMenuReq) Reset() {
	*x = UpdateMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_menu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuReq) ProtoMessage() {}

func (x *UpdateMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_menu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuReq.ProtoReflect.Descriptor instead.
func (*UpdateMenuReq) Descriptor() ([]byte, []int) {
	return file_sys_menu_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateMenuReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMenuReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *UpdateMenuReq) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *UpdateMenuReq) GetVisible() int32 {
	if x != nil {
		return x.Visible
	}
	return 0
}

func (x *UpdateMenuReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateMenuReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *UpdateMenuReq) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UpdateMenuReq) GetMenuUrl() string {
	if x != nil {
		return x.MenuUrl
	}
	return ""
}

func (x *UpdateMenuReq) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *UpdateMenuReq) GetMenuIcon() string {
	if x != nil {
		return x.MenuIcon
	}
	return ""
}

func (x *UpdateMenuReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新菜单信息状态请求参数
type UpdateMenuStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids    []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" form:"ids" json:"ids,omitempty"`   //主键
	Status int32   `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty"` //菜单状态(1:正常，0:禁用)
}

func (x *UpdateMenuStatusReq) Reset() {
	*x = UpdateMenuStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_menu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuStatusReq) ProtoMessage() {}

func (x *UpdateMenuStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_menu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateMenuStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_menu_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateMenuStatusReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateMenuStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 查询菜单信息详情请求参数
type QueryMenuDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"` //主键
}

func (x *QueryMenuDetailReq) Reset() {
	*x = QueryMenuDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_menu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMenuDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMenuDetailReq) ProtoMessage() {}

func (x *QueryMenuDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_menu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMenuDetailReq.ProtoReflect.Descriptor instead.
func (*QueryMenuDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_menu_proto_rawDescGZIP(), []int{4}
}

func (x *QueryMenuDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryMenuDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                                     //主键
	MenuName   string `protobuf:"bytes,2,opt,name=menu_name,json=menuName,proto3" form:"menu_name" json:"menu_name,omitempty" query:"menu_name"`            //菜单名称
	MenuType   int32  `protobuf:"varint,3,opt,name=menu_type,json=menuType,proto3" form:"menu_type" json:"menu_type,omitempty" query:"menu_type"`           //菜单类型(1：目录   2：菜单   3：按钮)
	Visible    int32  `protobuf:"varint,4,opt,name=visible,proto3" form:"visible" json:"visible,omitempty" query:"visible"`                                 //显示状态（0:隐藏, 显示:1）
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                     //菜单状态(1:正常，0:禁用)
	Sort       int32  `protobuf:"varint,6,opt,name=sort,proto3" form:"sort" json:"sort,omitempty" query:"sort"`                                             //排序
	ParentId   int64  `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" form:"parent_id" json:"parent_id,omitempty" query:"parent_id"`           //父ID
	MenuUrl    string `protobuf:"bytes,8,opt,name=menu_url,json=menuUrl,proto3" form:"menu_url" json:"menu_url,omitempty" query:"menu_url"`                 //路由路径
	ApiUrl     string `protobuf:"bytes,9,opt,name=api_url,json=apiUrl,proto3" form:"api_url" json:"api_url,omitempty" query:"api_url"`                      //接口URL
	MenuIcon   string `protobuf:"bytes,10,opt,name=menu_icon,json=menuIcon,proto3" form:"menu_icon" json:"menu_icon,omitempty" query:"menu_icon"`           //菜单图标
	Remark     string `protobuf:"bytes,11,opt,name=remark,proto3" form:"remark" json:"remark,omitempty" query:"remark"`                                     //备注
	CreateBy   string `protobuf:"bytes,12,opt,name=create_by,json=createBy,proto3" form:"create_by" json:"create_by,omitempty" query:"create_by"`           //创建者
	CreateTime string `protobuf:"bytes,13,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"` //创建时间
	UpdateBy   string `protobuf:"bytes,14,opt,name=update_by,json=updateBy,proto3" form:"update_by" json:"update_by,omitempty" query:"update_by"`           //更新者
	UpdateTime string `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"` //更新时间
}

func (x *QueryMenuDetailResp) Reset() {
	*x = QueryMenuDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_menu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMenuDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMenuDetailResp) ProtoMessage() {}

func (x *QueryMenuDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_menu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMenuDetailResp.ProtoReflect.Descriptor instead.
func (*QueryMenuDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_menu_proto_rawDescGZIP(), []int{5}
}

func (x *QueryMenuDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMenuDetailResp) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *QueryMenuDetailResp) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *QueryMenuDetailResp) GetVisible() int32 {
	if x != nil {
		return x.Visible
	}
	return 0
}

func (x *QueryMenuDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMenuDetailResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *QueryMenuDetailResp) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *QueryMenuDetailResp) GetMenuUrl() string {
	if x != nil {
		return x.MenuUrl
	}
	return ""
}

func (x *QueryMenuDetailResp) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *QueryMenuDetailResp) GetMenuIcon() string {
	if x != nil {
		return x.MenuIcon
	}
	return ""
}

func (x *QueryMenuDetailResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryMenuDetailResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryMenuDetailResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMenuDetailResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryMenuDetailResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询菜单信息列表请求参数
type QueryMenuListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuName string `protobuf:"bytes,1,opt,name=menu_name,json=menuName,proto3" form:"menuName" json:"menuName,omitempty"` //菜单名称
}

func (x *QueryMenuListReq) Reset() {
	*x = QueryMenuListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_menu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMenuListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMenuListReq) ProtoMessage() {}

func (x *QueryMenuListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_menu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMenuListReq.ProtoReflect.Descriptor instead.
func (*QueryMenuListReq) Descriptor() ([]byte, []int) {
	return file_sys_menu_proto_rawDescGZIP(), []int{6}
}

func (x *QueryMenuListReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

type QueryMenuListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                                     //主键
	MenuName   string `protobuf:"bytes,2,opt,name=menu_name,json=menuName,proto3" form:"menu_name" json:"menu_name,omitempty" query:"menu_name"`            //菜单名称
	MenuType   int32  `protobuf:"varint,3,opt,name=menu_type,json=menuType,proto3" form:"menu_type" json:"menu_type,omitempty" query:"menu_type"`           //菜单类型(1：目录   2：菜单   3：按钮)
	Visible    int32  `protobuf:"varint,4,opt,name=visible,proto3" form:"visible" json:"visible,omitempty" query:"visible"`                                 //显示状态（0:隐藏, 显示:1）
	Status     int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                     //菜单状态(1:正常，0:禁用)
	Sort       int32  `protobuf:"varint,6,opt,name=sort,proto3" form:"sort" json:"sort,omitempty" query:"sort"`                                             //排序
	ParentId   int64  `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" form:"parent_id" json:"parent_id,omitempty" query:"parent_id"`           //父ID
	MenuUrl    string `protobuf:"bytes,8,opt,name=menu_url,json=menuUrl,proto3" form:"menu_url" json:"menu_url,omitempty" query:"menu_url"`                 //路由路径
	ApiUrl     string `protobuf:"bytes,9,opt,name=api_url,json=apiUrl,proto3" form:"api_url" json:"api_url,omitempty" query:"api_url"`                      //接口URL
	MenuIcon   string `protobuf:"bytes,10,opt,name=menu_icon,json=menuIcon,proto3" form:"menu_icon" json:"menu_icon,omitempty" query:"menu_icon"`           //菜单图标
	Remark     string `protobuf:"bytes,11,opt,name=remark,proto3" form:"remark" json:"remark,omitempty" query:"remark"`                                     //备注
	CreateBy   string `protobuf:"bytes,12,opt,name=create_by,json=createBy,proto3" form:"create_by" json:"create_by,omitempty" query:"create_by"`           //创建者
	CreateTime string `protobuf:"bytes,13,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"` //创建时间
	UpdateBy   string `protobuf:"bytes,14,opt,name=update_by,json=updateBy,proto3" form:"update_by" json:"update_by,omitempty" query:"update_by"`           //更新者
	UpdateTime string `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"` //更新时间
}

func (x *QueryMenuListResp) Reset() {
	*x = QueryMenuListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_menu_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMenuListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMenuListResp) ProtoMessage() {}

func (x *QueryMenuListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_menu_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMenuListResp.ProtoReflect.Descriptor instead.
func (*QueryMenuListResp) Descriptor() ([]byte, []int) {
	return file_sys_menu_proto_rawDescGZIP(), []int{7}
}

func (x *QueryMenuListResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryMenuListResp) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *QueryMenuListResp) GetMenuType() int32 {
	if x != nil {
		return x.MenuType
	}
	return 0
}

func (x *QueryMenuListResp) GetVisible() int32 {
	if x != nil {
		return x.Visible
	}
	return 0
}

func (x *QueryMenuListResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryMenuListResp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *QueryMenuListResp) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *QueryMenuListResp) GetMenuUrl() string {
	if x != nil {
		return x.MenuUrl
	}
	return ""
}

func (x *QueryMenuListResp) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *QueryMenuListResp) GetMenuIcon() string {
	if x != nil {
		return x.MenuIcon
	}
	return ""
}

func (x *QueryMenuListResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryMenuListResp) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryMenuListResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryMenuListResp) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryMenuListResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type MenuEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MenuEmpty) Reset() {
	*x = MenuEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_menu_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuEmpty) ProtoMessage() {}

func (x *MenuEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_sys_menu_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuEmpty.ProtoReflect.Descriptor instead.
func (*MenuEmpty) Descriptor() ([]byte, []int) {
	return file_sys_menu_proto_rawDescGZIP(), []int{8}
}

var File_sys_menu_proto protoreflect.FileDescriptor

var file_sys_menu_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x79, 0x73, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x92, 0x03, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x71, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x29, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x07,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xca,
	0xbb, 0x18, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x55, 0x72, 0x6c, 0x52,
	0x07, 0x6d, 0x65, 0x6e, 0x75, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x61,
	0x70, 0x69, 0x55, 0x72, 0x6c, 0x52, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a,
	0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x08,
	0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xad, 0x03, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x09, 0x6d,
	0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c,
	0xca, 0xbb, 0x18, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x65,
	0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x25, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52,
	0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xca, 0xbb, 0x18, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0c, 0xca,
	0xbb, 0x18, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xca, 0xbb, 0x18, 0x07, 0x6d, 0x65, 0x6e,
	0x75, 0x55, 0x72, 0x6c, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a,
	0x07, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0xca, 0xbb, 0x18, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x52, 0x06, 0x61, 0x70, 0x69, 0x55,
	0x72, 0x6c, 0x12, 0x29, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49,
	0x63, 0x6f, 0x6e, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca,
	0xbb, 0x18, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0x54, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x42, 0x07, 0xca, 0xbb, 0x18, 0x03, 0x69, 0x64, 0x73, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa7, 0x03, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6e, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65,
	0x6e, 0x75, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x6e, 0x75, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x3d, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x6d, 0x65, 0x6e, 0x75,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa5,
	0x03, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x70, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x70, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x63,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x32, 0xd6, 0x04, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x12,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0xd2, 0xc1, 0x18, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x61, 0x64, 0x64, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x57, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0xd2, 0xc1, 0x18,
	0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x65, 0x6e,
	0x75, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x57, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x15, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0xd2, 0xc1, 0x18, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x69, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x25, 0xd2, 0xc1, 0x18, 0x21, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x70, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x6e, 0x75, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0xd2, 0xc1,
	0x18, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x65,
	0x6e, 0x75, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x68, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x22, 0xd2, 0xc1, 0x18, 0x1e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x35, 0x5a, 0x33,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x65, 0x69, 0x68, 0x75,
	0x61, 0x2f, 0x68, 0x65, 0x72, 0x74, 0x7a, 0x2d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x62, 0x69,
	0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6d,
	0x65, 0x6e, 0x75, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sys_menu_proto_rawDescOnce sync.Once
	file_sys_menu_proto_rawDescData = file_sys_menu_proto_rawDesc
)

func file_sys_menu_proto_rawDescGZIP() []byte {
	file_sys_menu_proto_rawDescOnce.Do(func() {
		file_sys_menu_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_menu_proto_rawDescData)
	})
	return file_sys_menu_proto_rawDescData
}

var file_sys_menu_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_sys_menu_proto_goTypes = []interface{}{
	(*AddMenuReq)(nil),          // 0: system.AddMenuReq
	(*DeleteMenuReq)(nil),       // 1: system.DeleteMenuReq
	(*UpdateMenuReq)(nil),       // 2: system.UpdateMenuReq
	(*UpdateMenuStatusReq)(nil), // 3: system.UpdateMenuStatusReq
	(*QueryMenuDetailReq)(nil),  // 4: system.QueryMenuDetailReq
	(*QueryMenuDetailResp)(nil), // 5: system.QueryMenuDetailResp
	(*QueryMenuListReq)(nil),    // 6: system.QueryMenuListReq
	(*QueryMenuListResp)(nil),   // 7: system.QueryMenuListResp
	(*MenuEmpty)(nil),           // 8: system.MenuEmpty
}
var file_sys_menu_proto_depIdxs = []int32{
	0, // 0: system.MenuHandler.AddMenu:input_type -> system.AddMenuReq
	1, // 1: system.MenuHandler.DeleteMenu:input_type -> system.DeleteMenuReq
	2, // 2: system.MenuHandler.UpdateMenu:input_type -> system.UpdateMenuReq
	3, // 3: system.MenuHandler.UpdateMenuStatus:input_type -> system.UpdateMenuStatusReq
	4, // 4: system.MenuHandler.QueryMenuDetail:input_type -> system.QueryMenuDetailReq
	6, // 5: system.MenuHandler.QueryMenuList:input_type -> system.QueryMenuListReq
	8, // 6: system.MenuHandler.AddMenu:output_type -> system.MenuEmpty
	8, // 7: system.MenuHandler.DeleteMenu:output_type -> system.MenuEmpty
	8, // 8: system.MenuHandler.UpdateMenu:output_type -> system.MenuEmpty
	8, // 9: system.MenuHandler.UpdateMenuStatus:output_type -> system.MenuEmpty
	5, // 10: system.MenuHandler.QueryMenuDetail:output_type -> system.QueryMenuDetailResp
	7, // 11: system.MenuHandler.QueryMenuList:output_type -> system.QueryMenuListResp
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sys_menu_proto_init() }
func file_sys_menu_proto_init() {
	if File_sys_menu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_menu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_menu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_menu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_menu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenuStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_menu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMenuDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_menu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMenuDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_menu_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMenuListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_menu_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMenuListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_menu_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_menu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sys_menu_proto_goTypes,
		DependencyIndexes: file_sys_menu_proto_depIdxs,
		MessageInfos:      file_sys_menu_proto_msgTypes,
	}.Build()
	File_sys_menu_proto = out.File
	file_sys_menu_proto_rawDesc = nil
	file_sys_menu_proto_goTypes = nil
	file_sys_menu_proto_depIdxs = nil
}
