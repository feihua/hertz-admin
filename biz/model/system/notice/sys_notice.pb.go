// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: sys_notice.proto

package notice

import (
	api "github.com/feihua/hertz-admin/biz/model/system/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加通知公告表请求参数
type AddNoticeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark        string `protobuf:"bytes,1,opt,name=remark,proto3" form:"remark" json:"remark,omitempty"`                                          //备注
	NoticeTitle   string `protobuf:"bytes,2,opt,name=notice_title,json=noticeTitle,proto3" form:"noticeTitle" json:"noticeTitle,omitempty"`         //公告标题
	NoticeType    int32  `protobuf:"varint,3,opt,name=notice_type,json=noticeType,proto3" form:"noticeType" json:"noticeType,omitempty"`            //公告类型（1:通知,2:公告）
	NoticeContent string `protobuf:"bytes,4,opt,name=notice_content,json=noticeContent,proto3" form:"noticeContent" json:"noticeContent,omitempty"` //公告内容
	Status        int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty"`                                         //公告状态（0:关闭,1:正常 ）
}

func (x *AddNoticeReq) Reset() {
	*x = AddNoticeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoticeReq) ProtoMessage() {}

func (x *AddNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoticeReq.ProtoReflect.Descriptor instead.
func (*AddNoticeReq) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{0}
}

func (x *AddNoticeReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddNoticeReq) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *AddNoticeReq) GetNoticeType() int32 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

func (x *AddNoticeReq) GetNoticeContent() string {
	if x != nil {
		return x.NoticeContent
	}
	return ""
}

func (x *AddNoticeReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AddNoticeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *AddNoticeResp) Reset() {
	*x = AddNoticeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNoticeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoticeResp) ProtoMessage() {}

func (x *AddNoticeResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoticeResp.ProtoReflect.Descriptor instead.
func (*AddNoticeResp) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{1}
}

func (x *AddNoticeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddNoticeResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 删除通知公告表请求参数
type DeleteNoticeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" form:"ids" json:"ids,omitempty"`
}

func (x *DeleteNoticeReq) Reset() {
	*x = DeleteNoticeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoticeReq) ProtoMessage() {}

func (x *DeleteNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoticeReq.ProtoReflect.Descriptor instead.
func (*DeleteNoticeReq) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteNoticeReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteNoticeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *DeleteNoticeResp) Reset() {
	*x = DeleteNoticeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNoticeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoticeResp) ProtoMessage() {}

func (x *DeleteNoticeResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoticeResp.ProtoReflect.Descriptor instead.
func (*DeleteNoticeResp) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteNoticeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DeleteNoticeResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 更新通知公告表请求参数
type UpdateNoticeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"`                                                     //公告ID
	NoticeTitle   string `protobuf:"bytes,2,opt,name=notice_title,json=noticeTitle,proto3" form:"noticeTitle" json:"noticeTitle,omitempty"`         //公告标题
	NoticeType    int32  `protobuf:"varint,3,opt,name=notice_type,json=noticeType,proto3" form:"noticeType" json:"noticeType,omitempty"`            //公告类型（1:通知,2:公告）
	NoticeContent string `protobuf:"bytes,4,opt,name=notice_content,json=noticeContent,proto3" form:"noticeContent" json:"noticeContent,omitempty"` //公告内容
	Status        int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty"`                                         //公告状态（0:关闭,1:正常 ）
	Remark        string `protobuf:"bytes,6,opt,name=remark,proto3" form:"remark" json:"remark,omitempty"`                                          //备注
}

func (x *UpdateNoticeReq) Reset() {
	*x = UpdateNoticeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoticeReq) ProtoMessage() {}

func (x *UpdateNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoticeReq.ProtoReflect.Descriptor instead.
func (*UpdateNoticeReq) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateNoticeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateNoticeReq) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *UpdateNoticeReq) GetNoticeType() int32 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

func (x *UpdateNoticeReq) GetNoticeContent() string {
	if x != nil {
		return x.NoticeContent
	}
	return ""
}

func (x *UpdateNoticeReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateNoticeReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type UpdateNoticeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *UpdateNoticeResp) Reset() {
	*x = UpdateNoticeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoticeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoticeResp) ProtoMessage() {}

func (x *UpdateNoticeResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoticeResp.ProtoReflect.Descriptor instead.
func (*UpdateNoticeResp) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateNoticeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateNoticeResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 更新通知公告表状态请求参数
type UpdateNoticeStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []int64 `protobuf:"varint,1,rep,packed,name=id,proto3" form:"id" json:"id,omitempty"`      //公告ID
	Status int32   `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty"` //公告状态（0:关闭,1:正常 ）
}

func (x *UpdateNoticeStatusReq) Reset() {
	*x = UpdateNoticeStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoticeStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoticeStatusReq) ProtoMessage() {}

func (x *UpdateNoticeStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoticeStatusReq.ProtoReflect.Descriptor instead.
func (*UpdateNoticeStatusReq) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateNoticeStatusReq) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateNoticeStatusReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UpdateNoticeStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string   `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
}

func (x *UpdateNoticeStatusResp) Reset() {
	*x = UpdateNoticeStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoticeStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoticeStatusResp) ProtoMessage() {}

func (x *UpdateNoticeStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoticeStatusResp.ProtoReflect.Descriptor instead.
func (*UpdateNoticeStatusResp) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNoticeStatusResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UpdateNoticeStatusResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

// 查询通知公告表详情请求参数
type QueryNoticeDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty"` //公告ID
}

func (x *QueryNoticeDetailReq) Reset() {
	*x = QueryNoticeDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNoticeDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNoticeDetailReq) ProtoMessage() {}

func (x *QueryNoticeDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNoticeDetailReq.ProtoReflect.Descriptor instead.
func (*QueryNoticeDetailReq) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{8}
}

func (x *QueryNoticeDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type QueryNoticeDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string                 `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code api.Code               `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
	Data *QueryNoticeDetailData `protobuf:"bytes,3,opt,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *QueryNoticeDetailResp) Reset() {
	*x = QueryNoticeDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNoticeDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNoticeDetailResp) ProtoMessage() {}

func (x *QueryNoticeDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNoticeDetailResp.ProtoReflect.Descriptor instead.
func (*QueryNoticeDetailResp) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{9}
}

func (x *QueryNoticeDetailResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryNoticeDetailResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

func (x *QueryNoticeDetailResp) GetData() *QueryNoticeDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryNoticeDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                                                   //公告ID
	NoticeTitle   string `protobuf:"bytes,2,opt,name=notice_title,json=noticeTitle,proto3" form:"notice_title" json:"notice_title,omitempty" query:"notice_title"`           //公告标题
	NoticeType    int32  `protobuf:"varint,3,opt,name=notice_type,json=noticeType,proto3" form:"notice_type" json:"notice_type,omitempty" query:"notice_type"`               //公告类型（1:通知,2:公告）
	NoticeContent string `protobuf:"bytes,4,opt,name=notice_content,json=noticeContent,proto3" form:"notice_content" json:"notice_content,omitempty" query:"notice_content"` //公告内容
	Status        int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                                   //公告状态（0:关闭,1:正常 ）
	Remark        string `protobuf:"bytes,6,opt,name=remark,proto3" form:"remark" json:"remark,omitempty" query:"remark"`                                                    //备注
	CreateBy      string `protobuf:"bytes,7,opt,name=create_by,json=createBy,proto3" form:"create_by" json:"create_by,omitempty" query:"create_by"`                          //创建者
	CreateTime    string `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"`                //创建时间
	UpdateBy      string `protobuf:"bytes,9,opt,name=update_by,json=updateBy,proto3" form:"update_by" json:"update_by,omitempty" query:"update_by"`                          //更新者
	UpdateTime    string `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"`               //更新时间
}

func (x *QueryNoticeDetailData) Reset() {
	*x = QueryNoticeDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNoticeDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNoticeDetailData) ProtoMessage() {}

func (x *QueryNoticeDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNoticeDetailData.ProtoReflect.Descriptor instead.
func (*QueryNoticeDetailData) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{10}
}

func (x *QueryNoticeDetailData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryNoticeDetailData) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *QueryNoticeDetailData) GetNoticeType() int32 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

func (x *QueryNoticeDetailData) GetNoticeContent() string {
	if x != nil {
		return x.NoticeContent
	}
	return ""
}

func (x *QueryNoticeDetailData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryNoticeDetailData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryNoticeDetailData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryNoticeDetailData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryNoticeDetailData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryNoticeDetailData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 分页查询通知公告表列表请求参数
type QueryNoticeListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeTitle string `protobuf:"bytes,2,opt,name=notice_title,json=noticeTitle,proto3" form:"noticeTitle" json:"noticeTitle,omitempty"` //公告标题
	NoticeType  int32  `protobuf:"varint,3,opt,name=notice_type,json=noticeType,proto3" form:"noticeType" json:"noticeType,omitempty"`    //公告类型（1:通知,2:公告）
	Status      int32  `protobuf:"varint,4,opt,name=status,proto3" form:"status" json:"status,omitempty"`                                 //公告状态（0:关闭,1:正常 ）
	PageNum     int32  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" form:"pageNo" json:"pageNo,omitempty"`                  //第几页
	PageSize    int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" form:"pageSize" json:"pageSize,omitempty"`            //每页的数量
}

func (x *QueryNoticeListReq) Reset() {
	*x = QueryNoticeListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNoticeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNoticeListReq) ProtoMessage() {}

func (x *QueryNoticeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNoticeListReq.ProtoReflect.Descriptor instead.
func (*QueryNoticeListReq) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{11}
}

func (x *QueryNoticeListReq) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *QueryNoticeListReq) GetNoticeType() int32 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

func (x *QueryNoticeListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryNoticeListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryNoticeListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryNoticeListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg   string                 `protobuf:"bytes,1,opt,name=msg,proto3" form:"msg" json:"msg,omitempty" query:"msg"`
	Code  api.Code               `protobuf:"varint,2,opt,name=code,proto3,enum=api.Code" form:"code" json:"code,omitempty" query:"code"`
	Total int64                  `protobuf:"varint,3,opt,name=Total,proto3" form:"Total" json:"Total,omitempty" query:"Total"`
	Data  []*QueryNoticeListData `protobuf:"bytes,4,rep,name=data,proto3" form:"data" json:"data,omitempty" query:"data"`
}

func (x *QueryNoticeListResp) Reset() {
	*x = QueryNoticeListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNoticeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNoticeListResp) ProtoMessage() {}

func (x *QueryNoticeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNoticeListResp.ProtoReflect.Descriptor instead.
func (*QueryNoticeListResp) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{12}
}

func (x *QueryNoticeListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *QueryNoticeListResp) GetCode() api.Code {
	if x != nil {
		return x.Code
	}
	return api.Code(0)
}

func (x *QueryNoticeListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryNoticeListResp) GetData() []*QueryNoticeListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryNoticeListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" form:"id" json:"id,omitempty" query:"id"`                                                                   //公告ID
	NoticeTitle   string `protobuf:"bytes,2,opt,name=notice_title,json=noticeTitle,proto3" form:"notice_title" json:"notice_title,omitempty" query:"notice_title"`           //公告标题
	NoticeType    int32  `protobuf:"varint,3,opt,name=notice_type,json=noticeType,proto3" form:"notice_type" json:"notice_type,omitempty" query:"notice_type"`               //公告类型（1:通知,2:公告）
	NoticeContent string `protobuf:"bytes,4,opt,name=notice_content,json=noticeContent,proto3" form:"notice_content" json:"notice_content,omitempty" query:"notice_content"` //公告内容
	Status        int32  `protobuf:"varint,5,opt,name=status,proto3" form:"status" json:"status,omitempty" query:"status"`                                                   //公告状态（0:关闭,1:正常 ）
	Remark        string `protobuf:"bytes,6,opt,name=remark,proto3" form:"remark" json:"remark,omitempty" query:"remark"`                                                    //备注
	CreateBy      string `protobuf:"bytes,7,opt,name=create_by,json=createBy,proto3" form:"create_by" json:"create_by,omitempty" query:"create_by"`                          //创建者
	CreateTime    string `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" form:"create_time" json:"create_time,omitempty" query:"create_time"`                //创建时间
	UpdateBy      string `protobuf:"bytes,9,opt,name=update_by,json=updateBy,proto3" form:"update_by" json:"update_by,omitempty" query:"update_by"`                          //更新者
	UpdateTime    string `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" form:"update_time" json:"update_time,omitempty" query:"update_time"`               //更新时间
}

func (x *QueryNoticeListData) Reset() {
	*x = QueryNoticeListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_notice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryNoticeListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNoticeListData) ProtoMessage() {}

func (x *QueryNoticeListData) ProtoReflect() protoreflect.Message {
	mi := &file_sys_notice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNoticeListData.ProtoReflect.Descriptor instead.
func (*QueryNoticeListData) Descriptor() ([]byte, []int) {
	return file_sys_notice_proto_rawDescGZIP(), []int{13}
}

func (x *QueryNoticeListData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryNoticeListData) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *QueryNoticeListData) GetNoticeType() int32 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

func (x *QueryNoticeListData) GetNoticeContent() string {
	if x != nil {
		return x.NoticeContent
	}
	return ""
}

func (x *QueryNoticeListData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryNoticeListData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *QueryNoticeListData) GetCreateBy() string {
	if x != nil {
		return x.CreateBy
	}
	return ""
}

func (x *QueryNoticeListData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *QueryNoticeListData) GetUpdateBy() string {
	if x != nil {
		return x.UpdateBy
	}
	return ""
}

func (x *QueryNoticeListData) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

var File_sys_notice_proto protoreflect.FileDescriptor

var file_sys_notice_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x79, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x32, 0x0a, 0x0c, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2f,
	0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x38, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xca, 0xbb, 0x18, 0x0d, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x40, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x2c, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x42,
	0x07, 0xca, 0xbb, 0x18, 0x03, 0x69, 0x64, 0x73, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x43, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x90, 0x02, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xca, 0xbb, 0x18,
	0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0d,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca,
	0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x43, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x53, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x42,
	0x06, 0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x49, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x06,
	0xca, 0xbb, 0x18, 0x02, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7b, 0x0a, 0x15, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbe, 0x02, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x12, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x32, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0e, 0xca, 0xbb, 0x18, 0x0a, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xca, 0xbb, 0x18, 0x06,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x29, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x02, 0x0a, 0x13, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xab, 0x05, 0x0a, 0x0d, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x09, 0x41,
	0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x20, 0xd2, 0xc1, 0x18, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x64,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23, 0xd2, 0xc1, 0x18, 0x1f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x66, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x17, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x23, 0xd2, 0xc1, 0x18, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x7e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x29, 0xd2, 0xc1,
	0x18, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x7a, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x28, 0xd2, 0xc1, 0x18, 0x24, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x72, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x26, 0xd2, 0xc1, 0x18, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x65, 0x69, 0x68, 0x75, 0x61, 0x2f, 0x68, 0x65, 0x72,
	0x74, 0x7a, 0x2d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sys_notice_proto_rawDescOnce sync.Once
	file_sys_notice_proto_rawDescData = file_sys_notice_proto_rawDesc
)

func file_sys_notice_proto_rawDescGZIP() []byte {
	file_sys_notice_proto_rawDescOnce.Do(func() {
		file_sys_notice_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_notice_proto_rawDescData)
	})
	return file_sys_notice_proto_rawDescData
}

var file_sys_notice_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_sys_notice_proto_goTypes = []interface{}{
	(*AddNoticeReq)(nil),           // 0: system.AddNoticeReq
	(*AddNoticeResp)(nil),          // 1: system.AddNoticeResp
	(*DeleteNoticeReq)(nil),        // 2: system.DeleteNoticeReq
	(*DeleteNoticeResp)(nil),       // 3: system.DeleteNoticeResp
	(*UpdateNoticeReq)(nil),        // 4: system.UpdateNoticeReq
	(*UpdateNoticeResp)(nil),       // 5: system.UpdateNoticeResp
	(*UpdateNoticeStatusReq)(nil),  // 6: system.UpdateNoticeStatusReq
	(*UpdateNoticeStatusResp)(nil), // 7: system.UpdateNoticeStatusResp
	(*QueryNoticeDetailReq)(nil),   // 8: system.QueryNoticeDetailReq
	(*QueryNoticeDetailResp)(nil),  // 9: system.QueryNoticeDetailResp
	(*QueryNoticeDetailData)(nil),  // 10: system.QueryNoticeDetailData
	(*QueryNoticeListReq)(nil),     // 11: system.QueryNoticeListReq
	(*QueryNoticeListResp)(nil),    // 12: system.QueryNoticeListResp
	(*QueryNoticeListData)(nil),    // 13: system.QueryNoticeListData
	(api.Code)(0),                  // 14: api.Code
}
var file_sys_notice_proto_depIdxs = []int32{
	14, // 0: system.AddNoticeResp.code:type_name -> api.Code
	14, // 1: system.DeleteNoticeResp.code:type_name -> api.Code
	14, // 2: system.UpdateNoticeResp.code:type_name -> api.Code
	14, // 3: system.UpdateNoticeStatusResp.code:type_name -> api.Code
	14, // 4: system.QueryNoticeDetailResp.code:type_name -> api.Code
	10, // 5: system.QueryNoticeDetailResp.data:type_name -> system.QueryNoticeDetailData
	14, // 6: system.QueryNoticeListResp.code:type_name -> api.Code
	13, // 7: system.QueryNoticeListResp.data:type_name -> system.QueryNoticeListData
	0,  // 8: system.NoticeHandler.AddNotice:input_type -> system.AddNoticeReq
	2,  // 9: system.NoticeHandler.DeleteNotice:input_type -> system.DeleteNoticeReq
	4,  // 10: system.NoticeHandler.UpdateNotice:input_type -> system.UpdateNoticeReq
	6,  // 11: system.NoticeHandler.UpdateNoticeStatus:input_type -> system.UpdateNoticeStatusReq
	8,  // 12: system.NoticeHandler.QueryNoticeDetail:input_type -> system.QueryNoticeDetailReq
	11, // 13: system.NoticeHandler.QueryNoticeList:input_type -> system.QueryNoticeListReq
	1,  // 14: system.NoticeHandler.AddNotice:output_type -> system.AddNoticeResp
	3,  // 15: system.NoticeHandler.DeleteNotice:output_type -> system.DeleteNoticeResp
	5,  // 16: system.NoticeHandler.UpdateNotice:output_type -> system.UpdateNoticeResp
	7,  // 17: system.NoticeHandler.UpdateNoticeStatus:output_type -> system.UpdateNoticeStatusResp
	9,  // 18: system.NoticeHandler.QueryNoticeDetail:output_type -> system.QueryNoticeDetailResp
	12, // 19: system.NoticeHandler.QueryNoticeList:output_type -> system.QueryNoticeListResp
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_sys_notice_proto_init() }
func file_sys_notice_proto_init() {
	if File_sys_notice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_notice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNoticeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNoticeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNoticeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNoticeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNoticeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNoticeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNoticeStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNoticeStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNoticeDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNoticeDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNoticeDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNoticeListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNoticeListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_notice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryNoticeListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_notice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sys_notice_proto_goTypes,
		DependencyIndexes: file_sys_notice_proto_depIdxs,
		MessageInfos:      file_sys_notice_proto_msgTypes,
	}.Build()
	File_sys_notice_proto = out.File
	file_sys_notice_proto_rawDesc = nil
	file_sys_notice_proto_goTypes = nil
	file_sys_notice_proto_depIdxs = nil
}
