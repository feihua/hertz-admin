// Code generated by hertz generator.

package operatelog

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	operatelog "github.com/feihua/hertz-admin/biz/model/system/operatelog"
)

// DeleteOperateLog .
// @router /api/system/operateLog/deleteOperateLog [POST]
func DeleteOperateLog(ctx context.Context, c *app.RequestContext) {
	var err error
	var req operatelog.DeleteOperateLogReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(operatelog.DeleteOperateLogResp)

	c.JSON(consts.StatusOK, resp)
}

// QueryOperateLogDetail .
// @router /api/system/operateLog/queryOperateLogDetail [POST]
func QueryOperateLogDetail(ctx context.Context, c *app.RequestContext) {
	var err error
	var req operatelog.QueryOperateLogDetailReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(operatelog.QueryOperateLogDetailResp)

	c.JSON(consts.StatusOK, resp)
}

// QueryOperateLogList .
// @router /api/system/operateLog/queryOperateLogList [POST]
func QueryOperateLogList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req operatelog.QueryOperateLogListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(operatelog.QueryOperateLogListResp)

	c.JSON(consts.StatusOK, resp)
}
