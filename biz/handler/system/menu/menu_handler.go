// Code generated by hertz generator.

package menu

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	menu "github.com/feihua/hertz-admin/biz/model/system/menu"
)

// AddMenu .
// @router /api/system/menu/addMenu [POST]
func AddMenu(ctx context.Context, c *app.RequestContext) {
	var err error
	var req menu.AddMenuReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(menu.AddMenuResp)

	c.JSON(consts.StatusOK, resp)
}

// DeleteMenu .
// @router /api/system/menu/deleteMenu [POST]
func DeleteMenu(ctx context.Context, c *app.RequestContext) {
	var err error
	var req menu.DeleteMenuReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(menu.DeleteMenuResp)

	c.JSON(consts.StatusOK, resp)
}

// UpdateMenu .
// @router /api/system/menu/updateMenu [POST]
func UpdateMenu(ctx context.Context, c *app.RequestContext) {
	var err error
	var req menu.UpdateMenuReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(menu.UpdateMenuResp)

	c.JSON(consts.StatusOK, resp)
}

// UpdateMenuStatus .
// @router /api/system/menu/updateMenuStatus [POST]
func UpdateMenuStatus(ctx context.Context, c *app.RequestContext) {
	var err error
	var req menu.UpdateMenuStatusReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(menu.UpdateMenuStatusResp)

	c.JSON(consts.StatusOK, resp)
}

// QueryMenuDetail .
// @router /api/system/menu/queryMenuDetail [POST]
func QueryMenuDetail(ctx context.Context, c *app.RequestContext) {
	var err error
	var req menu.QueryMenuDetailReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(menu.QueryMenuDetailResp)

	c.JSON(consts.StatusOK, resp)
}

// QueryMenuList .
// @router /api/system/menu/queryMenuList [POST]
func QueryMenuList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req menu.QueryMenuListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(menu.QueryMenuListResp)

	c.JSON(consts.StatusOK, resp)
}
