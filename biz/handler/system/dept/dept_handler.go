// Code generated by hertz generator.

package dept

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	dept "github.com/feihua/hertz-admin/biz/model/system/dept"
)

// AddDept .
// @router /api/system/dept/addDept [POST]
func AddDept(ctx context.Context, c *app.RequestContext) {
	var err error
	var req dept.AddDeptReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(dept.AddDeptResp)

	c.JSON(consts.StatusOK, resp)
}

// DeleteDept .
// @router /api/system/dept/deleteDept [POST]
func DeleteDept(ctx context.Context, c *app.RequestContext) {
	var err error
	var req dept.DeleteDeptReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(dept.DeleteDeptResp)

	c.JSON(consts.StatusOK, resp)
}

// UpdateDept .
// @router /api/system/dept/updateDept [POST]
func UpdateDept(ctx context.Context, c *app.RequestContext) {
	var err error
	var req dept.UpdateDeptReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(dept.UpdateDeptResp)

	c.JSON(consts.StatusOK, resp)
}

// UpdateDeptStatus .
// @router /api/system/dept/updateDeptStatus [POST]
func UpdateDeptStatus(ctx context.Context, c *app.RequestContext) {
	var err error
	var req dept.UpdateDeptStatusReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(dept.UpdateDeptStatusResp)

	c.JSON(consts.StatusOK, resp)
}

// QueryDeptDetail .
// @router /api/system/dept/queryDeptDetail [POST]
func QueryDeptDetail(ctx context.Context, c *app.RequestContext) {
	var err error
	var req dept.QueryDeptDetailReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(dept.QueryDeptDetailResp)

	c.JSON(consts.StatusOK, resp)
}

// QueryDeptList .
// @router /api/system/dept/queryDeptList [POST]
func QueryDeptList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req dept.QueryDeptListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(dept.QueryDeptListResp)

	c.JSON(consts.StatusOK, resp)
}
