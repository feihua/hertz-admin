// idl/hello/hello.proto
syntax = "proto3";

package menu;

option go_package = "menu";

import "api.proto";




//menu params start -----------
message MenuListReq {
}

message MenuListResp {
  string msg = 1;
  api.Code code = 2;
  repeated MenuListData data = 3;
}

message MenuListData {
  int64 id = 1;
  string createTime = 2;
  string updateTime = 3;
  int32 statusId = 4;
  int32 sort = 5;
  int64 parentId = 6;
  string menuName = 7;
  string menuUrl = 8;
  string apiUrl = 9;
  string menuIcon = 10;
  string remark = 11;
  int32 menuType = 12;
}

message MenuSaveReq {
  int32 StatusId = 1[(api.body) = "statusId"];
  int32 Sort = 2[(api.body) = "sort"];
  int64 ParentId = 3[(api.body) = "parentId"];
  string MenuName = 4[(api.body) = "menuName"];
  string MenuUrl = 5[(api.body) = "menuUrl"];
  string ApiUrl = 6[(api.body) = "apiUrl"];
  string MenuIcon = 7[(api.body) = "menuIcon"];
  string Remark = 8[(api.body) = "remark"];
  int32 MenuType = 9[(api.body) = "menuType"];
}
message MenuSaveResp {
  string msg = 1;
  api.Code code = 2;
}

message MenuUpdateReq {
  int64 Id = 1[(api.body) = "id"];
  int32 StatusId = 2[(api.body) = "statusId"];
  int32 Sort = 3[(api.body) = "sort"];
  int64 ParentId = 4[(api.body) = "parentId"];
  string MenuName = 5[(api.body) = "menuName"];
  string MenuUrl = 6[(api.body) = "menuUrl"];
  string ApiUrl = 7[(api.body) = "apiUrl"];
  string MenuIcon = 8[(api.body) = "menuIcon"];
  string Remark = 9[(api.body) = "remark"];
  int32 MenuType = 10[(api.body) = "menuType"];
}

message MenuUpdateResp {
  string msg = 1;
  api.Code code = 2;
}
message MenuDeleteReq {
  int64 id = 1[(api.body) = "id"];
}

message MenuDeleteResp {
  string msg = 1;
  api.Code code = 2;
}
//menu params end -----------
service MenuHandler {
  //menu
  rpc MenuList(MenuListReq) returns(MenuListResp) {
    option (api.get) = "/api/system/menu/queryMenuList";
  }
  rpc MenuSave(MenuSaveReq) returns(MenuSaveResp) {
    option (api.post) = "/api/system/menu/addMenu";
  }
  rpc MenuUpdate(MenuUpdateReq) returns(MenuUpdateResp) {
    option (api.post) = "/api/system/menu/updateMenu";
  }
  rpc MenuDelete(MenuDeleteReq) returns(MenuDeleteResp) {
    option (api.post) = "/api/system/menu/deleteMenu";
  }

}
